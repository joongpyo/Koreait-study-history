1. jdk 다운로드 및 설치
 - jdk 다운로드 : 개발
 - jre : 자바프로그램을 실행만
 - url : www.oracle.com -> products -> java -> Download Java Now

윈도우 키 + e : 탐색기
윈도우 키 + m : 바탕화면 바로가기
윈도우 키 + r : 실행

2. Notepad ++

3. IDE : 프로그램 개발을 편하게 하기 위한 통합개발툴
  - eclipse, IntelliJ
  - www.eclipse.org : j2ee, j2se

4. 고정배열[10], 동적배열<10>
   ~ ArayList, Hashmap
   객체 : 회원가입 => 아이디(글자), 비밀번호(숫자)
   
   자바 = Native Java =  표준 자바(로컬 자바)
   웹 자바 = spring = spring framework = spring boot
   
   
   html5(화면 구성), css(화면 디자인)
   Javascript = 서버 작업을 x => node.js => 서버 작업
   => jquery, Ajax, React.js, vue.js, Angular.js
	        json
  데이터베이스 
  - 관계형 데이터베이스(백엔드) : Mysql(Mariadb), Mssql, Oracle
  - NoSQL : MongoDB(프론트엔드)
 변수 => 이름규칙


--------------------------------------------------------------------------------------------------------------
취업 준비 : 포트폴리오 주제


-------------------------------------------------------------------------------------------------------------
1.jdk 설치 후 환경변수 설정
  내 pc -> 속성 -> 고급시스템 설정 -> 고급 -> 환경변수 -> 시스템 변수 -> Path, JAVA_HOME 설정
  -> 찾아보기(path는 bin, JAVA_HOME은 bin은 빼고)
2. 설치 확인
윈도우 키 + r : 실행 
cmd -> javac, java로 설치 확인

 
3. bin 실행 파일이 저장된 폴더
    컴퓨터 0, 1 -> a(00000011)
   - 코드 작성 <-> javac로 컴파일() <-> 	      java 실행 <-> 화면을 볼 수 있음
         a 	      -> 컴퓨터가 읽을 수 있게 변환 -> 000000011
	compiler = 포팅(변환)

   lib : 추가로 필요한 프로그램을 저장되는 곳(jar로 압출된 파일)
         db-connect.jar

---------------------------------------------------------------------------------------------------------
1. 자바 파일 생성(클래스-> 하나의 프로그램)
  - 클래스(객체) : 변수, 메소드(동작), getter, setter 모든 것을 포함하고 있는 덩어리
  - 파일이름 = 클래스이름 동일하게 작성, 클래스 이름 첫글자는 대문자
  - 자바는 대소문자 정확하게 지켜서 작성
  

  Hello World~ 출력하는 자바 프로그램 작성 
 1. 클래스 : public class 클래스이름 {}
  

	사람이 작성한 영어를 컴퓨터가 인식 할 수 있게 javac
	실행은 java

	1) javac 파일이름.java
	2) java 파일이름

	javac -d . 파일이름.java


------------------------------------------------------------------------------------------------------------

print() : 이어 적을 때
println() : 개행(줄바꿈 할때)


1. Hello
   World 두 줄로 출력하는 프로그램 작성
   (0) 자바에서는 폴더(html,css,js)가 아니라 패키지(.java,.class)
        Java Project 큰 폴더
   (1) 파일이름 : Hello.java
   (2) 주석 작성 :  유지보수 할 때 설명 글(프로그램으로 실행되지 x)
       여러 줄일 때 : /* 설명 */
       한줄일 때 : //
   (3) 클래스 생성 :
   (4) 출력 코드 :


이름규칙
1. 패키지, 메소드, 변수 이름은 소문자 시작
    - ** 단어와 단어가 이어질 때는 이어지는 단어의 첫글자는 대문자 **
     ex) num
          num + string => numString  (카멜표기법)
          log + in => login
2. 클래스는 대문자 시작

3.
강형 타입 체크 프로그램
  C,C++,Java
- 타입을 정확하게 체크
  int 10
  double 0.1
  float 
  String abcde

약형 타입 체크 프로그램
  Javascript, 웹언어
- 10, abcde
- let 10
- let abcde

---------------------------------------------------
1. Primitive Type(기본형) = 스택메모리에 저장
정수 : int
실수 : double
논리형 : boolean


2. Reference Type(논리형) = 힙 메모리에 저장
문자열 : String
정수 :  Integer
실수 : Double
논리형 : Boolean
객체, 배열
List<Integer>



----------------------------------------------------------
100 숫자를 출력하시오
단, 기존 자바 프로젝트를 활용한다.

1. 클래스 이름은 Var.java
2. 주석
3. 변수 이름은 num 
4. 정수값 100 입력
5. 출력

	

오후 3:57 2023-09-08************************************************************************************************
1. 컴퓨터 언어론
  - 절차지향 : ~~~제어문까지 ex) C

  - 객체지향 방법론 따라야함 : Object O P ex) C++, Java, C#
   - 객체, 상속,
   단점) 초반 설계할 때 어렵다 => 추가, 유지보수가 편함
	보안에 조금 더 이점

2. 프로그래밍은 중복되는 걸 x => 유지보수가 편하게 바꾸려는 성격 또는 코드 짧게
	
	if(){}
	if()
	?

---------------------------------------------------------------
설치 (2)

1. JDK 다운로드 : www.oracle.com => products => java=> java download...
   설치 => 윈도우가 자동으로 JDK를 인식할 수 있게 해줘야함
   환경설정 - 고급  - 설치된 자바 경로를 등록 
   path(자바설치경로\bin), JAVA_HOME(자바 설치 경로)

2. IDE(통합개발환경) : www.eclipse.org => download => se버전(자바만 개발)
   압축해제		       org=>무료(나라에서 지원이나 기부)


똑같은 코드를 사용하지 않으려고
JAVA_HOME
C:\Program Files\Java\jdk-20

path
%JAVA_HOME%\bin

실행에 가서(윈도우 + r) => cmd
javac
java
javac -version

TOMCAT_HOME

tomcat.apache.org

서버(호스트) <=> 클라이언트

서버(내가 만든것을 많은 사람이 사용할 수 있게 해주는 것)
웹 서버 : 내가 만든 홈페이지를 많은 사람이 ...
- apache.org : 윈도우, 리눅스, MAC
- IIS : 일반적으로 윈도우에서만 

JSP(스프링)서버 : tomcat.apache.org


게임 서버 : 회사에서 만든 게임을 많은 사람이 ... 

-----------------------------
컴퓨터는 0,1 숫자만

www.naver.com -> dns 서버 -> 223.130.200.107 -> 네이버 전달

ping www.naver.com

---------------------------------------------------
자바, html, css, js 스프링 : 일반

---------------------------------------------------
스택(대부분의 프로그래밍), 힙(객체, 배열, 참조형 타입...)

1. 메모리(RAM) : Random Access Memory(임시 메모리)
   JVM : Java Virtual Machine(자바 가상 머신) - 정교하게 컨트롤x

2. 데이터 크기
    (1) 숫자 : 256 => 128(음수) 0 +127(양수)
    byte(1byte) < char(1byte) < short(2byte) < int(4byte) < long(8byte) < float(4byte) < double(8byte)

    (2) 논리형
    boolean(1byte)

    (3) 문자열 : 글자
     String str = "a";
     String str = new String();

	
 	bit(0,1)
	1 => 0000 0001     

---------------------------------------
프로젝트 생성 후 -> 클래스 파일 -> 파일이름과 클래스이름이 동일해야함
파일이름의 첫글자는 항상 대문자.
자바의 클래스 이름 규칙 중 키워드로 사용하는 이름은 쓰지 않는다.

1. 파일이름은 ByteEx.java
2. 주석
3. main 메소드()
4. 프로그램 작성
5. 출력

	강형타입 : 프로그래밍 할 때 타입을 정확하게 명시
	데이터타입 변수명 = 값;
===============================================
1. 문자(숫자) :  작은 따옴표(싱클 쿼터) - 하나의 글자 <=> 여러 글자(문자열) String 큰 따옴표
=  (1byte = 256) : 키보드에 있는 버튼 - ASCII(아스키코드)
				       한글 UTF-8 자바는 기본적으로 UTF-8 방식을 지원
1. 파일이름 : CharEx.java
2. main() 생성
3. 주석 : 생략
4. 프로그래밍
5. 출력

2. 정수 / 정수 = int
            IntEx.java
	main();


   실수 / 실수 = double



boolean 출력 true, false


BooleanEx.java


DoubleEx.java//






오전 9:03 2023-09-11************************************************************************************

1. 설치 
(1) jdk, eclipse(intelli j)
  - jdk download
  -내 pc => 고급 => 환경설정 => JAVA_HOME (JDK 설치 폴더) - (C:\Program Files\Java\jdk-20)
 			  => path(javac, java 위치해 있는 폴더) (JDK설치폴더\bin)
			       
   www.oracle.com=> products => java=> 스크롤 내려서 밑에 있는 download java => window => x64 MSI installer


 
- eclipse.org download : IDE 통합개발환경


script : 끼워넣어서 사용하는 프로그램
javascript, typescrip, 웹 프로그램 : html 안에 프로그래밍..

middleware

자바	<middleware>	저장(DB)
			mail server
jdk - developer
jre - run




2. 변수와 객체의 차이점
   변수(하나)
   객체(타입이 동일하거나 다른 여러 개의 데이터를 처리)


   변수와 객체의 비슷한 점
   변수든 객체든 선언하고 초기화 작업 필요 

   객체는 선언과 초기화를 처리하는 방법으로 new(생성자) : String str = new String();
   -> 반복문을 함께 사용

* 외우기 ! : 1. num 정수를 선언하고 100이라는 값으로 초기화 하시오.   
   int num; : 선언
   num = 100; : 초기화
   int num = 100; 선언과 초기화를 한번에 한 것*


   String str;	      	
   str = new String();    =>  String str = new String();



---------------------
PrintEx.java
print();
println();
printf();

정수 5와 8의 합을 출력하시오. 


PrintEx2.java

char 
boolean

--------------------------
html
로그인 -> 한 페이지에서만 정보를 유지 할 수 있음. 다른 페이지로 넘어가면 로그인이 끊김
세션(연결), 쿠키 (투표), (아이디 저장 체크) => Ajax
(Session) login



================================
IncDecEx.java

1. operator : 부호
Increment And Decrement Operator
증감 연산자   // 통상 for문에서 주로 쓰임
int a = 1; //+1
int result = a + 1

int result = a++;
int result = ++a;

int result = a--;
int result = --a;

sum = sum +i;

sum += i;

---------------------------------------
산술 연산자
Arithmetric Operator
+-*/%

비교 연산자
>, <, ==, != 결과는 true, false

논리 연산자
&&. ||  


2. 변수의 타입
  (1)기본형(primitive Type)
    int a = 0;
    double b = 0.0;
    boolean c= false;

String str = "";
String 기본형, 참조형
String str = null;

회원가입 : Member.java > model, dto
아이디 : 문자열
비밀번호 : 문자열
이름 : 문자열
나이 : 문자열

이메일주소 : 문자열

for



(2)참조형(Reference Type) : 반복문(for, 향상된for) //*잘모름*  
  - 첫글자가 대문자로 시작...  ex) Interger, Double, Float, Char, Boolean
			     객체
    데이터를 묶음으로 처리하는 것..
  - 배열(고정[], 동적<참조형 또는 객체>) : ArrayList(목록출력), HashMap(JSON)
	       동적<Interger> 동적<Member> 
  -초기화 null


==================================
1. 대입 연산자 Assignment operator
int num = 10;
num = num +2 => num += 2;

AssignEx.java

클래스 변수

객체
=> 변수X(필드, 멤버변수)
=> 생성자(), 생성자(매개변수 = 파라미터 = parameter)
=> getter() - 값을 가져올 때
     setter() - 값을 저장할 때

=> 추가적인 동작이 필요할 때는 메소드








오전 8:54 2023-09-12****************************************************************

1. 실수 : 부동소수점 오차
   (1) float(4byte) : 소수점 7자리 이상

   (2) double(8byte) : 소수점 15자리 이상


FloatDoubleEx.java

2. 타입 캐스팅(형 변환) : 업 캐스팅(자동 : 작은 -> 큰), 다운 캐스팅(강제 : 큰 -> 작은)
		       묵시적 형변환 	       명시적 형변환

CastEx.java


3. 대입연산자(=), 비교연산자(>,< 결과 true, false)
String 기본, 참조

값을 비교할 때(equals), 주소를 비교할 때(==)
String str = "";
String str = null;

String str = new String();

StringEx.java


---------------------

1. 참조형(reference)
(고정)배열[숫자]=> 개수 => length();
(동적)배열<참조> => 개수 => size();

문자열 다루기(일반적으로 index : 0)
이메일 주소 체크 : @
charAt

replaceAll() : 바꾸기

substring : 추출 -> 남자, 여자 구분하는

StringEx2.java

StringEx3.java
변수.toUppercase();
변수.split("문자"); => 배열 => for
printf -> format(형식을 지정해서 출력)


============================================
1. 비교연산자 : 결과 true, false
CompEx.java

2. 논리연산자 : &&(AND), ||(OR) - true, false

1만족하고 3도 만족하면 남자

LogicEx.java


&&(AND연산)
조건 모두 만족하면
:~이면, 이고


||(OR연산) 
조건중에 하나라도 만족하면 
: 또는

====================================
1. 대입연산자 : 약식으로 연산자
AssignEx2.java




2. 삼항연산자(?) : 
ConOpt.java

타입변수 = (조건) ? "참일 때" : "거짓일 때";
	출력


----------------------------------------------------------
Tut01Ex.java






오전 9:02 2023-09-13******************************************************


1. html -> input
   Scanner : 숨겨져 -> import
   입력을 받아서 처리
   System.in
    
   VarEx.java
  
  command = 터미널(서버)

  ScannerEx.java

  ScannerEX2.java
  1. 문자열 -> 숫자로
  2. 숫자 -> 문자열
  3. Scanner -> 형변환

   printf : System.out....


---------------------------------------------------

제어문

ContEx.java

ContEx2.java
논리연산자 + 제어문

&& :
 score >= 91 && score <= 100
||

학점 91 ~ 100 A등급
81 ~ 90 B등급
71 ~ 80 C등급
나머지는 F등급으로 표시하시오

===============================
switch

비교연산자를 사용할 수 없다.
값 : 정수, 문자, 문자열

switch(값) ~ case ~ break ~ default

ContEx3.java

=============================
ContEx4.java













오전 9:10 2023-09-14***************************************************

1. switch ~ case ~ break ~ default

정수를 입력 받아서
3~5 계절은 봄입니다.
6~8 계절은 여름입니다.
9~11 가을입니다
겨울입니다.

ContEx5.java

-------------------------------------------------------
반복문 loop(for)

(고정)배열 : 갯수를 정해 놓고 작업
in[] i = new int[]; ->사용하지 않는 값은 빈값 존재

(가변, 동적) 배열
List<>list = new ArrayList<>(10);
10=> 5 => 공간 조정

LoopEx.java

for
순서 : 초기값 -> 조건 -> 출력코드 -> 증감값

for(int i = 0; i < 조건; ++i) //보통 이렇게 씀

for = 향상 for
for(타입 별명: 배열명){
출력코드
}



while
while(i < 조건) {
출력코드
++i;
}

LoopEx2.java

LoopEx3.java

-----------------------------------------------------

무한루프(웹서비스) : 개발자 또는 시스템 강제로 종료하기 전에는 계속 실행
무한루프 중지 - Ctrl + C(cut)

무한루프 구조
:
  while(true) {
	출력코드	
  }

   for() {;;} {
	출력코드
}

LoopEx4.java


---------------------------------------------
LoopEx5.java


----------------------------
LoopEx6.java
<화면구성>
=================================
스타벅스 커피 자동 판매기
=================================
1. 구매 (P/p) | 2. 잔액 (B/b) | 3. 종료(Q/q)

메뉴선택 >

[조건]
* 최초 잔액은 10000, 커피 한잔 가격은 3000, 커피 재고량은 10
* P/p를 입력하면 구매
  - 구매 시 내가 가진 돈이 커피 한잔 가격보다 적거나
     커피 재고량이 0보다 적으면 "커피를 구매할 수 없습니다"
     출력 후 메뉴 화면을 이동
  - 커피 구매 후 잔액 및 커피 재고량 감산




* B/b를 입력하면 잔액 확인
   - 현재 남은 잔액 출력하기

* 종료를 입력하기 전까지는 무한반복 
  - Q/q를 입력하면 프로그램 종료

* 잘못된 입력 값을 입력하면 종료가 아닌 메뉴 화면으로 이동


==============================================
github.com/zinny24/koreait/tree/main/java2

클래스 또는 메소드
변수는 클래스 바로 밑이나 메소드 바로 밑에 생성
------------------------------------------------------------
git : 프로그램
github : 저장소









오전 8:59 2023-09-15*******************************************************************************
1. 다운로드

www.oracle.com -> products -> java -> Download java now -> window -> x64 MSI Installer

www.eclipse.org -> download -> download package -> Eclipse IDE for Java Developers -> window 


JAVA_HOME 새로 생성
JDK가 설치된 위치

path 추가
%JDK가 설치된 위치%\bin

javac -> java -> java -version

--------------------------------------------------------------------------------

Test.java

변수
Var.java

출력
PrintEx.java
print(); // 개행x
println();
printf();
println(String.format()); 개행 + 출력형식

--------------------------------------------
변수나 객체의 값이 미치는 범위
ScopeEX.java


---------------------------

비교연산자
><, >=, <=, ==, != 결과가 true,

조건문 : if, 삼항연산자

OperEx.java

OperEx2.java

논리연산자 : true, false
 AND 연산(조건1 && 조건2) : 조건 모두 만족해야 참
OR 연산 (조건 1 || 조건2 : 조건 중 하나만 만족하면 참


=============================

for(조건1;조건2;조건3)

조건1
 while(조건2){
	조건3
}

do ~ while(조건 만족하지 않아도 무조건 한번 실행)










오전 9:02 2023-09-18*************************************************************************

변수(값),		메소드 (동작)

객체 방법론(매개변수 3개이하)

접근제한자 리턴타입 이름(배열(객체)){
	return;
}

----------------------------------------
IfEx.java
IfRandomEx.java

출력코드 2개 {}

1    2    3
가위바위보

컴퓨터와 나의 값을 비교
Math.random()-> 실수 -> 변환 -> 알고리즘에 필요한 추가적인 값이 필요
-----------------------------
switchRandEx.java

LoopEx.java

LoopEx2.java

LoopBreakEx.java

가장 가까운 반복문 빠져나가기
break;

가장 가까운 반복문 건너 뛰기
continue;

------------------------------------------------
LoopEx3.java


*****switch (값), while(조건식), if(조건식) *****


=--------------------------------
BalanceEx.java

<출력예시>
System.out.println("-------------------------------------");
System.out.println("1. 예금 | 2. 출금 | 3. 확인 | 4. 종료");
System.out.println("-------------------------------------")
System.out.print("선택 > ");

Scanner로 메뉴선택
Scanner로 예금액, 출금액 처리

종료(4) 입력 전까지는 무한반복
예금(1) : 잔고 + 예금액
출금(2) : 잔고 - 출금액
확인(3) : 잔고 
종료(4) : 프로그램 종료


----------------------------------------------------------------
객체 지향 : 데이터(값) + 메서드(동작)

tut04

HelloEx.java

객체 위에서부터 아래로 프로그래밍(추상화 : 공통, 요약)

HelloEx2.java


--------------------------------------------------------------------
웹 사이트
webEx.java

같은 파일 이름안에는 public class는 하나만 


Hello.java -  main x

WebEx.java - main o

위에(객체) -> 아래 (main)

LoopEx.java






오전 9:01 2023-09-19****************************************************************

객체 구성 요소(생략 가능)
1. 필드 : 공유변수
2. 생성자 : 객체 생성시 처음 값 지정
3. getter, setter : 필드에 저장 set, 출력
4. 메소드 : disp();


자바 데이터를 변수 삽입
1. 변수 직접
2. 생성자
3. setter, getter

객체 : 재사용 + 보안(캡슐화)
int age = 20;

처음 값을 어떻게 초기화, 100
int i = 0;
int i = 100;

integer i = new Integer();
integer i = new Integer(100);

오버로딩 : 메소드 이름을 하나로 여러 메소드 만들기
1. 생성자 오버로딩
   파일 이름과 생성자이름 동일
   리턴 타입x

2. 메소드 오버로딩
      


1. 메소드 -> 객체(필드,생성자,오버로딩)
2. 고정배열
3. 객체
4. 리스트

Member[] = new Member[10];
	
계산기 : 이름 규칙, 변수이름 규칙 -> Cala.java CalsEx.java

	model > Login.java, Member.java
	dto
	entity

	Login 프로그램 : 이메일,  비밀번호
	Login.java : 이메일, 비밀번호
	LoginEx.java	

	회원가입 : Member, Register
	
	객체 : 이름 나이 포인트
	회원가입 진행하는 main()
	Member.java
	MemberEx.java

---------------------------------------------

tut05


계산기 : CalEx.java




--------------------------------
프로그램에서 return
1. 프로그램 끝 : 문장에 제일 마지막에 사용
2. 값을 사용하는 쪽으로 보내 줄 때

 if(0<1) {
	return;
}

같은 파일 안에서는 

public class 1번만

class 파일이름2

---------------------------
LoginEx.java

-----------------------------
변수, 객체 초기화

int i = 0; //처음 값으로 0을 출력
int i = 100;

프로그램이 시작될 때 : 생성자 (파일이름과 동일, return 없어야함)
Login l = new Login(); //객체에 빈 값을 저장
Login l = new Login("코리아아이티 아카데미");
Login l = new Login(100,200);
Login l = new Login("koreait","1234");
Login l = new Login("koreait","1234",20);

Login l = new Login(); //default생성자 -> 생략 가능
ConstEx.java

this : 현재 페이지
super : 부모페이지

this()

----------------------------------------------------------------------
1. 자바에서 필드에 값을 저장하는 방법
  - 직접 필드에 저장 x 보안때문에
  
  RegisterEx.java this(), this
	
  - 생성자를 이용해서 저장
  - getter,setter 이용해서 저장

BoardEx.java
필드 생성
set 저장, get 출력

public void set필드명(String userid){
	this.필드명 =  매개변수;
}

public String get필드명(){
	return 필드명;
} 



------------------------------------
파일 분리해서
1. 객체파일 : Login2.java

2. 실행파일 Login2Ex.java

필드
이메일, 비번, 로그인 시간

출력코드
로그인 정보를 출력합니다. > 생성자
이메일, 비번 저장 setter 
이메일, 비번, 로그인 시간을 출력할때는 getter
toString 메소드를 이용해서 화면에 출력






오전 8:59 2023-09-20***********************************************************

묶음 : 객체 - 타입이 다르고 많은 데이터를 이름 하나로

객체에 데이터를 저장하는 방식

1. 필드에 직접(x)
2. 생성자를 통해서 저장
3.getter, setter를 이용


고정[타입] : 갯수 정하고 작업


동적<참조타입> : 처음 갯수는 정해져 있지만 자동으로 공간을 늘리고 줄임
List 순서가 있는 배열
- ArrayList, Vector
List a = new ArrayList

map
- Hashmap : 순서가 없는 동적배열 : passwd : "1234", userid : "koreait" 


int i 
Member m

[
	{
	String, int, double
	},
	{
	String, int, double
	}
]
Object O P
객체

배열
쓰는 방법
1. int[] num = null; //초기화
   num = int[10];
  *이거만 쓴다고 보면됨 int[] num = new int[];  //검색속도 빠름
   
    1번째 회원정보
   private String userid;
   private String passwd;
   private int age;

    2번째 회원정보
   private String userid;
   private String passwd;
   private int age;

    3번째 회원정보
   private String userid;
   private String passwd;
   private int age;  

   Register[] r = new Register[3];
   
  

2. int[] num = new int[] {1,2,3,4,5,}; - 메소드형
	public int add(int [] num){
}

3. int[] num= {1,2,3,4,5}; - 축약형

tut06

ArrEx01.java

ArrEx2.java

ArrEx03.java

객체 지향 언어의 기본
값      동작
변수   메소드()

합계, 평균 class = > cal

같은 파일에서 class가 여러개 일때 
public class는 한번만 존재해야함

----------------------------------------------------------------------
UsersEx.java
필드 : 아이디, 비밀번호
생성자 
getter, setter

객체는 저장하는 용도, 출력하는 용도

회원가입 : 1배열 ~ 3배열
필드, 생성자, getter, setter

변수 사용하기 전 변수 초기화
int num = 0;

객체도 사용하기전 초기화 - > 생성자
Users u = new Users();

객체에 데이터 주입
필드 x
생성자 : default 생성자
파라미터가 없는 생성자는 없어도 실행



생성자 이름은 같지만
매개변수, 타입이 다를 때  - 생성자 오버로딩
Users user = <- 초기화 아님 
new Users(); <- 초기화임


getter, setter


-----------------------------------------------
객체 = 덩어리

UserEx2.java








오전 9:10 2023-09-21**************************************************************
폰트
fonts.google.com  A1, Noto Sans
		     roboto, popins 

fonsawesome.com

사진
unsplash.com

------------------------------------
tut07
RegisterEx.java

객체 : vo, dto, entity, model
메소드 : dao > RegisterDao.java

dto > Register.java -> 객체 생성

1. 객체 + 배열 = 회원가입[3]
2. 필드
   이메일
   비밀번호
   이름

3. 생성자를 통해서 저장
4. 회원수 출력
   회원 목록 출력

생성자, getter,setter 저장하려면 => 생성자로 초기화

arr[i] = new Register();

동적배열 초기화
list.add(new Register())

값 -> 초기화 + set객체 -> db,hd 

----------------------------------------------------
Article.java
필드
번호, 제목, 조회수, 등록일

ArticleEx.java

-----------------------------
scoresEx.java

<출력화면>
1. 학생수 | 2. 점수입력 | 3. 점수출력 | 4. 평균 | 5. 최고점수 | 6. 종료

 package dao
ScoresDao.java

model,vo , dto

---------------
emp
EmployeesEx.java - main

- service
  EmployeeSrv.java
- vo
  Employee.java

객체 empID
db emp_id

필드 만들기

사번 -> 문자열 "900900001" -> num, id, emp_id;
부서 -> 문자열 -> buseo, depart
이름 -> 문자열  -> name, emp_name
급여 -> 정수 -> emp_salary, money
입사일 -> 날짜 -> startDate
퇴사일 -> 날짜 -> endDate










오전 9:00 2023-09-22************************************************

동적배열  .size
Collections
    부모객체 -> 
1. List 순서 : Arraylist(자식객체) -> index번호 값
2. map : 순서 x Hashmap -> 이름으로 값을
	arr[i] = 100
	list.add(100)
	list.get(i)
	list.remove();
부모객체<객체타입> 별명 - new 자식객체<객체타입>();

List00


ListEX01.java

ListEx03.java
객체 -> 생성자 -> 리스트
리스트 -> 메소드

--------------------------------------
<쇼핑몰>
- 생성자를 이용해서 객체를 초기화하고 + List 생성
- 메소드를 저장하고 출력
객체 : Item.java(상품),	 Seller.java(판매자)
동작:
메인
판매자 아이디, 판매자 이름, :  상품명, 상품가격, 재고 : 출력
1. 생성자 : 회원등록 + 배열도 생성
2. 메소드를 이용해서 상품 등록
ShopEx.java

----------------------------------
1. 회원가입 : Member.java, MemberDao.java, MemberEx.java
 입력, 출력, 삭제, 검색













오전 8:59 2023-09-25***********************************************

List : 순서 - 중복값 허용
set : 중복값 허용x
Map : 중복키 허용x

forEach()

시간 1000/1s

file 입출력 : 파일 업로드시 변환 ->  1.hwp, 1.hwp + uuid ,date
			        2023.09.25 / 21421542.hwp로 이름 변환
static, singleton
----------------------------
List02

Member.java   MemberDao.java  MemberEx.java
회원정보 출력
회원아이디 : 0000, 회원비밀번호 0000;
String		String
	생성자

List : 줄

-------------------------------------------
List -> ArrayList
add, remove

Set -> HashSet : 중복된 값x
add, remove

setEx01 -> SetEx01.java


Map -> HashMap : 중복된 키 x
put

List<Member>

SetEx02.java

SetEx03.java

SetEx04.java -> main
Register.java -> 객체
RegisterDao.java -> add, delete, show  동작



Map

<k,v>
<key, value>

-> java

=>javascript

<userid. "koreait">

num = 100

Object obj = 

mapEx


MapEx01.java

MapEx02.java

Member.java
MemberDao.java
MemberEx.java











오전 9:02 2023-09-26**********************************************
1. 입출력 : Input + Output = I/O

운영체제(MS, Linux, JVM) -> 외부(장치)
			- 폴더, 파일생성, 파일쓰기

	예외처리(Exception) : try ~ catch ~ (finally)	
		= throws
	Exception -> Not, IOException

2. 경로(절대경로, 상대경로)
절대경로 : c:\, D:\,   /
상대경로 : ../  ,   ./	  :기준점 - 현재 작업하는 그곳에 기준

	../ 한 칸 위로  ../../ 두 칸 위로
	./현재위치
--------------------------------------------------------
ioEx
ioEx01.java

IOEx02.java
디렉토리
현재시간을 1/1000초로 변환

DateEx.java


-------------------------------------

CharSetEx.java

StreamEx01.java

*.properties

naver.com

웹서비스 종류
홈페이지
Ftp(파일업로드)
Ssh(원격접속)
dns(도메인 서버)


StreamEx02.java


-------------------------------------------
inheritance

InherEx01.java

vehicle.java
- model, color;
- void start(), void stop()

현대차 extends Vehicle
-name = 소나타
- model, color;
- void start(), void stop()

HyundaiEx.java

기아차 extends Vehicle
- name = k5
- model, color;
- void start(), void stop()

KiaEx.java

AutoEx.java


클래스이름 extends 가져올 클래스명

상속 extends : 새로 만드는게 아니라 
기존에 있는 자료를 물려 받아서 사용 

강제성, 강제성 x
다중상속, 다중상속x
다형성( 부모( (new Child2() ) ) - polymorphism

다중 상속
inter 만들때 - 몸통 x => add()
interface Cals{
	public void sum();
}

implements 사용할 때 
강제성을 띄는 override

부모 생성자()를 가져다 쓰면 
super(); super.title

내 생성자를 가져다 쓰면
	this.title;
this();

상속
오버라이드
추상화
인터페이스
다형성













오전 8:58 2023-09-27*************************************************

inherEx01

InherEx01.java

클론 프로젝트

-----------------------------------



Add : add, title, turnOn(), turnOff()


Desktop : 계산기 extends Add 
- ms
new 생성자()


Laptop : 계산기 extends Add 
- mac
new 생성자()

실행 : InherEx01.java

-----------------------------------------------
InherEx02.java

1. 더하기, 빼기 : Cal
  - 메인

2. 더하기, 빼기 : Cal
   추가 : 곱하기, 나누기 : AdvCal.java
  - 메인 

-------------------------------------------
사람클래스 : Person.java
- 이름, 나이
void 잠(), void 식사()

학생클래스 : Std.java
- 학번
- 이름, 나이
void 잠(), void 식사()
학생은 공부를 합니다.

사원클래스 : Emp.java
- 사번
- 이름, 나이
void 잠(), void식사()
출근합니다.

InherEx03


-------------------------------------------------------

phone.java
모델,색상
전원 on, off

InherEx04.java

-------------------------------------------------------

Override 덮어쓰기(본체 고쳐쓰기)

Cell.java
void 전원 OnOff(전원을 켭니다. 전원을 끕니다.)

AndroidCell.java

AppleCell.java

CellEx.java

-----------------------------------------------------------
Computer : void PowerOn(), void powerOff();
OSsystem 

abstract : 단일상속 extends
본체 x
override

AbsEx.java

interface -> implements : 다중상속
본체x
override

interfaceEx.java

----------------------------------------------------------
DBEx.java

데이터베이스 시작, 종료
데이터베이스 쿼리 insert, update, delete, select, (강제)
(강제x) transaction

Mysql
Oracle

Transaction
4단계 : 1~4 다 만족해야 성공

ATM


--------------------------------

다형성 : polymorphism

커널 : kernel(두뇌)

class OS{
	sysout("운영체제를 시작합니다");
}

MS
void run();

Apple
void run();

Linux
void run();

PolyEx.java
상속(부모) -> 자식

별도 클래스 처리

다형성 -> 객체지향












오전 9:01 2023-10-04***************************************************

JDBC

mysql.com

JDK <- Mysql Connector -> Mysql
	 미들웨어

DDL : CREATE, DROP
DCL : INSERT, SELECT, UPDATE, DELETE


mysql 설치 후
:환경변수 path 경로설정 bin -> cmd -> mysql -uroot -p


서버 : 최고관리자(root) -> 일반계정에 권한 부여
SQL : 구조적 질의어 - Structured Query Language
- ANSI SQL : 모든 데이터베이스에서 공통으로 사용 가능

데이터베이스(큰 폴더) -> 테이블(작은 폴더 : 여러 개 존재 가능 - 실제 데이터가 저장)

큰 폴더 확인 
SHOW DATABASES;

작은폴더 확인
SHOW tables;

대문자를 넣어도 소문자로 인식
쇼핑몰(데이터베이스 - 큰 폴더) - SHOP
use 데이터베이스명;
use SHOP;

타입을 정확하게 명시했는지 => DESC 테이블명;
- 회원가입 : 객체 (아이디, 이름, 나이..) - SHOP_MEMBER 테이블
CREATE TABLE SHOP_MEMBER(
userid varchar(15), 
name varchar(10),
tel char(15),
jumin char(14),
age int,
date date
);

use 데이터베이스명;(큰 폴더 안으로 들어가기)
 

- 상품등록 : 객체 (상품이름, 가격..) - SHOP_ITEMS 테이블
숫자 INT, 글자는 VARCHAR(저장할 글자 수)

데이터베이스 K_ERP

전사적자원관리(ERP) - 데이터베이스
use 데이터베이스명;

- 사원관리 : Employees 테이블 : K_ERP_EMP 테이블
사번(INT), 사원명(varchar(5)), 급여(INT), 입사일 datetime(date)

create table k_erp_emp(
id int,
name varchar(20),
salary int,
startDate date
);

- 급여관리 : Salary 테이블 : K_ERP_SALARY 테이블

- 자재관리 : Stuff 테이블 : K_ERP_STUFF 테이블

데이터베이스 정의어(D Definition L) 
- 생성(CREATE), 제거(DROP), 변경(ALTER)



데이터베이스 조작어(D Manupulate L)
- 입력(INSERT), 검색(SELECT), 수정(UPDATE), 삭제(DELETE)


데이터베이스 제어어(D Control L) : 보안 - 계정 생성


백업
: mysql 나가기 
-> cd c:\temp 
-> mysqldump -uroot -p K_ERP > ./20231004_erp.dump
		(백업할데이터베이스이름> ./백업이름.확장자)



show databases;

create database shop;

show databases;


jdbcPrj01
- JdbcPrj01Ex.java

jdbc:mysql://localhost:3306/shop


쇼핑몰
- 회원가입 테이블
 - 회원번호 : int
 - 회원이름 : varchar
 - 전화번호 : char(13)
 - 포인트 : int
 - 가입일 : 
create table Member(
id int,
name varchar(20),
tel char(13),
point int,
regdate date
);


내컴퓨터
- 이름 또는 ip주소
localhost OR 123.0.01
koreait.co.kr : 3306 (포트번호)

INSERT INTO 테이블명 VALUES(값1, 값2...);
insert into member values(101, '홍길동', '010-1234-5678',1000, NOW());

확인 : SELECT * FROM MEMBER;,

DDL : CREATE, DROP, ALTER


DML
테이블 생성 후
INSERT
SELECT
UPDATE
DELETE

제약조건
쇼핑몰(shop)
- 회원가입
  - 이메일
  - 비밀번호
  - 이름
  - 주소

1. mysql 접속 

2. show databases;

3-1. 만들어진 데이터베이스가 없다면 
      create database 이름;
      USE 데이터베이스명;

3-2. 미리 생성된 데이터베이스가 있으면,
      USE 데이터베이스명;

4. 테이블 이름 확인
    show tables;

5. 테이블 생성 -> 자바에서 필드명과 동일하게 작업
   디비는 _단어를 연결하고
   자바는 카멜표기법으로 연결
   - 제약 조건을 지정해야한다
     - NOT NULL : 절대 값이 비면 안되는 필드

create table member(
email varchar(50) NOT NULL,
passwd varchar(15) NOT NULL,
name varchar(10) NOT NULL,
addr1 char(100),
addr2 char(50)
);


5-2. 테이블이 존재한다면..
show tables;
desc 테이블명; = 테이블 구조확인

6. CRUD 작업

**기본키(primary key) : 빈값, 중복된 값 모두 x 
-> 유일한 나를 구분해 준다(수정, 삭제, 검색 내 것만 처리가 가능)
unique : 빈값 허용하지만 중복된 값은 허용

create table member(
email varchar(50) NOT NULL primary key,
passwd varchar(15) NOT NULL
);

INSERT INTO member VALUES
('mail@mail.com', '1234')
, ('mail2@mail.com', '1234')
, ('mail3@mail.com', '1234');

select count(*) as '회원 수' from member; -- 사원 수 출력할 때

create table member(
id int not null primary key,
name varchar(50),
passwd varchar(10)
);

insert into member values
(101, '홍길동', '1111'), 
(102, '김찰스', '2222'), 
(103, '홍찰김', '3333');

select * from member; 출력

delete from member; 전체삭제

delete from member where id = 101;


번호 자동지정 옵션 넣기
create table member(
id int not null auto_increment,  <--
name varchar(10) not null,
passwd varchar(20) not null,
primary key(id)
);


값 입력하기
insert into member values(null, '홍찰찰','1234');

insert into member values(null, '홍찰찰','1234');

insert into member values(null, '홍찰찰','1234');

삭제
delete from member where id = 6;

수정
update 테이블명 set 
바꿀컬럼명1 = 값, 바꿀컬럼명2 = 값 
where 조건 = 값;

컬럼명 = 필드

이름, 비번, 5번
update member set name = '김밥먹고싶다', passwd = '비밀번호' where id = 5;



정리--------------

입력 
: insert into 테이블명 values(값1, 값2 ...)

삭제
: delete from 테이블명 where pk컬럼 = 값;

수정
: update 테이블명 set 수정할 컬럼1 = 값, 수정할 컬럼2 = 값... where pk컬럼 = 값;

전체검색
: select * from member;

조건검색
: select * from 테이블명 where pk컬럼 = 값;

------------------------------------------------

회원번호, 회원이름, 비밀번호를 데이터베이스에 저장하는 jdbc 프로그램을 완성하시오.
jdbcPrj02 => JdbcPrj02Ex.java
insert.txt

0. 데이터베이스/ 테이블 생성 : mydb/register
1. 드라이버 등록
2. Class.forName()
3. url, id, pwd
4. INSERT

1-9, ㄱ - ㅎ, a ~ z : ASC : 오름차순
9-1, ㅎ - ㄱ, z ~ a : DESC : 내림차순

Order by id desc : id를 기준으로 내림차순
Order by id asc : id를 기준으로 오름차순

select * from register order by id desc;



















오전 9:01 2023-10-05*****************************************************

jdbc + mysql

primary key 젤 중요한 것

create, drop
insert, select, update, delete

1. db접속
2. db 확인 - grp
  - db 생성 또는 db 확인
  - use db명
3. 테이블 컬럼(필드 타입 설정)작업
  - 테이블 구조 확인 desc 테이블명;
	사번(int), 사원명(varchar(10)), 입사일(date), 퇴사일(date)

	create table member(
		com_id int not null auto_increment,
		com_name varchar(30) not null,
 		startDate date,
		endDate date,
		primary key(com_id)	
	);

	insert into member values(null, '홍찰찰', now(), now());
	select * from member;
	select * from member where com_id = 1;
	update member set com_name ='김찰스' where com_id = 1;
	
	delete from member where com_id = 1;
	now(), curren_date(); sysdate();

4. insert, select, update, delete
   조건 where 컬럼명 = '홍길동'
   insert 빼고 조건 기입

	Select * from member order by com_id desc; 최근에 저장한 것이 제일 위로

	Select 구문에서 Limit 항상 제일 마지막에 사용
	
	한페이지에 보여질 갯수
	Select * from member order by com_id desc limit 1;
	
	Select * from member order by com_id desc limit 1, 1; 시작 인덱스 번호

	회원테이블에서 2023-10-05일에 입사한 사원을 사번 내림차순으로 출력하시오.
	오래된 순으로 2개의 값만 출력하시오.
	SELECT * FROM member where startDate = '2023-10-05' 
	ORDER BY com_id DESC LIMIT 인덱스번호, 갯수;
	
	SELECT * FROM member 조건, 정렬, limit;


1. 테이블 작업
2. jdbc
  - 프로젝트 생성 : jdbcPrj03 -> JdbcPrj04.java
  - 드라이버 등록
  

------------------------------------------------------------------------
jdbcPrj04
  - JdbcPrj04.java


mysql + jdbc
db : shop
table : items
상품번호 : int, not null, pk
상품이름 : not null, 문자열
상품가격 : int, not null
상품재고 : int, not null
상품등록일 : date, not null






+-----------------------db, 테이블 만들기-----------------------+
show databases;				

create database shop;

use shop;

show tables;
fo
create table items(
	item_id int not null auto_increment,
	item_name varchar(15) not null unique,
	item_price int not null,
	item_stock int not null,
	item_date datetime not null,
	primary key(item_id)
);

show tables;

desc items;
+-----------------------------------------------------------------+




+------------------------------값 입력----------------------------+

INSERT INTO items VALUES(101, '감자통구이', 1000, 10, now());

+------------------------------------------------------------------+



+------------------------------출력--------------------------------+
SELECT * FROM items;
SELECT * FROM items WHERE item_date = '2023-10-05 14:16:36';
SELECT * FROM items WHERE item_id = 101;
+-------------------------------------------------------------------+





Items.java
ItemsEx.kava













오전 8:51 2023-10-10************************************************************
(html 상세보기(목록)) -> db ->  객체 (model, entity, vo)
-> jdbc

mydb
회원가입 myinfo
아이디, 비밀번호, 나이



myinfoPrj

MyinfoEx.java

create table myinfo(
userid varchar(20) not null,
passwd varchar(20) not null,
age int not null
);

custPrj
Customer.java
CustomerDao.java
연결()
입력()
출력()
CustomerEx.java

mydb;
고객관리 프로그램: customers

create table customers(
id int not null,
email varchar(50) not null,
name varchar(20) not null,
salary int,
regdate date
);

------------------------------------------------------------
STATIC

static
:공유(누적), new 사용 x -> 클래스이름.메소드()

static
StaticEx.java
StaticEx2.java

shop.java
- 회원번호(자동으로 ++1) = 생성자를 이용해서..
- 회원아이디
- 회원비밀번호

ShopEx.java



HTML--------------------------------------------------------

웹디자이너

----------------풀스택
웹퍼블리셔 html, css, js
프론트엔드 html, css, js react , vue
벡엔드

1. 개발 툴 : 확장자 .html
- intellij, eclipse, vscode, notepad++
- bracket

- vscode
- html
tut01 :index.html
tut01.html


emmet 자동완성

스크립트(웹언어는 규칙 정확히 지키지 않아도 
실행되는 경우가 많기에 유연하다.)

추가 프로그램
마우스 오른쪽 버튼으로 실행하는
live server

img,  br.. 외에는 열면 닫아줘야함


w3c.org

01_heading.html

02_p.html

03_ex.html
! tab

reset.css







오전 9:00 2023-10-11**********************************************************

singleton
SingletonEx01.java

* static : 공유(누적)

Connection 1개만
db: insert, select, update, delete

* singleton : 객체 1개만 생성하고 공유해서 사용
사용할 때 메모리 주소를 하나로 처리

객체 여러개 만들때 : 메모리 주소가 여러개
Company c1 = new Company();
Company c2 = new Company();

insert, select, update, delete -> singleton
--------------------------------------
jdbcPrj05
- Member.java
- MemberDao.java
- DBConnect.java
- MemberEx.java

회원가입 프로그램
Member

DB : mydb
table :member
이름(Column)

create table member(
id int not null auto_increment primary key,
email varchar(50) not null,
passwd varchar(20) not null,
name varchar(20) not null,
depart varchar(20),
position varchar(20),
salary int,
startDate date,
endDate date
);


HTML---------------------------------------------------
web
1. 파일이름.html : 04_ex.html
2. ! tab : html 기본 구조를 자동으로 생성 emmet
3. reset: html에서 기본으로 가지고 있는 여백 제거(모든 페이지)
  - 파일 분리
4. 제목은 h1 ~ h6
   문장 p
   부분 또는 특정 단어를 표시할 때 span
   한 줄 바꿈 br
5. 글씨체, 아이콘
   fonts.google.com

   fontawesome cdn
   fontawesome.com

style.css



tut03
-  css
-  js
01_ex.html








오전 8:56 2023-10-12**********************************************
generic

NoneGeneric.java

Object01.java 

Object a = 10;
(int)a 

과일을 상자에 담기 : 객체
연필을 상자에 담기 : 객체


1. 객체 타입의 편의성
NoneGeneric
Object
Generic.java
Generic02.java



-----------------------------------------------------
02_ex.html

fonts.google.com

   fontawesome cdn

   fontawesome.com
   한글 영어
    a1, roboto

  main 1400px 1600px

  웹 해상도
  반응형 사이트
  - 모, 탭, 노트, pc
   









오전 9:03 2023-10-13********************************************************

catch(Exception)
자바(로컬) : 컴파일언어(타입 강형), 하이브리드 언어
javac 클래스이름.java -> 컴파일(JVM 인식) -> (클래스이름.class) -> java 클래스이름(실행)
			compile				Runtime

서버 : 여러사람이...
웹 언어 : 인터프리터 언어

예외 : 문제가 생기면 적절하게 개발자가 조정 가능
에러 : 개발자 조정 할 수x  => JVM   

jdk + jre

Throwable (최상위 클래스)
- Exception : 컴파일
  1. classNotFoundE~ : Class.forName(디비);
  2. IOE~ : 입출력
  3. FileNotFoundE : 파일이 없는 경우
  4. InterruptException : 쓰레드
  5. CloneNotSupportEx~ : clone 객체 사용할 때

- Runtime Exception : 실행 단위
  ArimetricEx~ : 나누기 예외

exception
Exception01.java
Exception02.java



사용자 아이디 체크(exception)
Exception 상속 받아서 생성자를 이용해서 예외클래스 작성 -> 사용

UseridCheck.java

LoginEx.java



tut05
01_ex.html
- css
- js
- images

배경색 설정 후
- 인라인 : a, form, table, img, span
- 블록 : 

02_ex.html

03_ex.html

ul li
ol li
메뉴

04_ex.html

tut04
01_text.html
- css
- js
- images

















오전 9:01 2023-10-17*****************************************************
1.익명함수 : 이름없이 사용(1번 필요)
	   - 다른 메소드안에 사용(내부 함수)
2. 인터페이스 사용해서 구현
3. 생성자 x
4. 인터페이스에서 이름만 빌려 쓰고 내용은 별도로 작성

인터페이스(생성자 만들 x -> new x) -> 람다식
Java : 객체지향
Lamda : 객체지향 -> 함수 지향도 사용 가능(Javascript 익명함수)

public string str(){}

1. function str(){}
2. function(){}
3. () -> {}

lamda
LamdaEx.java

LamdaEx2.java

LamdaEx3.java

LamdaEx4.java

LamdaEx5.java

문자열 연결: +

concat(연결1, 연결2, 연결자)
	001234-5567890 "-"

ladaEx06.java
LamdaEx06.java


Html--------------------------

ul li
ol li
dl dt	
05_ex.html


tut06
01_tbl.html
- css
- images
- js












오전 9:01 2023-10-18**********************************************




1. 
  thread
 ThreadEx.java
ThreadEx01.java
ThreadEx02.java
ThreadEx03.java

1. extends Thread 상속
2. implements Runnable > Thread 객체에 주입해서 사용
-> 오버라이드 run(); - 작업
-> start(); 작업을 실행

implements 사용시 Thread 객체 별도 생성


ThreadEx04.java

Thread를 이용해서 익명함수로 처리 : 필요에 의해서 한번
- run(); 메소드를 익명함수로 처리
- start();

Thread t1 = new Thread (익명함수)
Thread t1 = new Thread(new Runnable () {})




HTML----------------------

tut06 
03_ex.html

폰트, 폰트어썸
기본 스타일 제거
 A1, fontawesome  cdn
unsplash.com -> raw(5000px) 원본그대로
컴퓨터상에 나타낼땐 압축해서


------------------
header > nav 

main > section > article
main > section > article
main > section > article

footer > copyright


















오전 8:55 2023-10-19**************************************************

시험##########

1. 객체지향 프로그래밍 언어 활용
  필기 70%
  실기 30%

2. 능력단위: 세부 과목
   (1) 개발자 환경 구축
   (2) 프로그래밍언어 활용
   (3) 프로그래밍언어 응용
   (4) 응용SW 기초 기술 활용

=======================================

1). 개발자 환경 구축

(1) 자바: 자바 가상 머신(JVM), 하이브리드 언어
	메모리 생성하고 사용x -> 제거 jvm

  - src : 컴파일 : javac 자연어(사람이 읽는 언어) => 기계어
     javac 파일이름.java

  - bin : 실행(java) 기계어 => 실행  //bin은 실행파일
     java 파일이름


(2) 통합개발환경(IDE): 이클립스, intellij
		    but x) notepad++, 메모장
    1) 오픈소스
    2) 컴파일, 실행 동시에 처리
    3) workspace - switch : 작업 폴더를 변경

(3) jdk => 환경변수 설정 => 바로 적용 안됨 -> flush
    서버 -> 환경설정 -> 서버 재부팅

(4) 미군 작전용 스마트(갤럭시)
    입는 컴퓨터 : 신체 능력이 2배
    - 웨어러블 컴퓨터
	
     AR(증강현실) : 실제하는 산 이미지 위에 그래픽을 설정
     VR(가상현실) : 전부 컴퓨터 그래픽

     냉장고, 보일러 + 원격 관리 -> 유비쿼터스 환경

     블록체인 : 정보를 블록단위로 잘라서(분산처리)
       	      연결하여 위, 변조를 방지하기 위한 기술

(5) 컴파일 : c, c++, java
    /인터프리터 언어(웹) :  : spring, .net, php, javascript


실기

1. jdk, 이클립스 다운로드해서 설치, 설정 방법  (서술형 4문제)
   (1) jdk
   (2) 이클립스
   
2. 응용 프로그램을 개발 하기 위한 도구 3가지 
   - intelllij, eclipse, vscode


--------------------------------------------------------------

2). 프로그래밍언어 활용


필기

(1) 상속 : extends(클래스:객체생성)
  	다중 상속X - 선택적 오버라이딩
    구현 : interface(객체 생성x) + Implemetns(클래스:객체 생성)
 	상속 단점 보안 - 강제 오버라이딩
     - 별도 클래스에서 메소드 또는 필드 private 설정을 하면 상속x

(2) 메소드 또는 필드에 final 설정을 하면
     값을 변경 x, 상속 x, 오버라이딩(수정) x
     final double PI = 3.14;
     PI = 8; (X)

(3) 객체 구성 요소인 필드, 생성자, 메소드에 대한 설명
   1) 필드 : 데이터 저장
   2) 생성자 : new 클래스이름(); => 초기화
	     instance
   3) 메소드: 동작 그리고 몸통({})

(4) 반드시, ~만 - 라고 문제가 나오면  XXX

(5) 논리연산자 &&, ||, 삼항연산자 ? :

(6) 메소드의 특징 
     void(없다) -> return이 없다 -> sysout  
     void 외에 결과값이 필요하다면 return 존재
     배열에서 배열 갯수를 모를때 -> ... 

     메소드(생성자) 오버로딩
     - 매개변수의 갯수나 타입이 다를 때 사용
       (이름은 동일하게 사용해도 됨)

(7) 인터페이스(interface)
     - 객체 생성 x
     - 다형성(부모 = 자식1, 부모 = 자식2, 부모 = 자식3)

(8) Collection (동적배열)
    - 고정배열 : 속도빠름, 검색은 빠르지만 수정, 삭제는 문제가 됨
    - 동적배열 : 속도느림, 검색은 느리지만 수정, 삭제 시 편리
       - 선형 리스트 (순서대로 index 번호)
         -  ArrayList, Vector : 차이는 Vector는 안전하게 처리하되 속도는 ArrayList보다 느림
       - 비선형(순서x -> 이름으로 구분): Map<>

실기 문제
- 3의 배수 5의 배수 출력
- 영문자를 입력 받아 대문자로 변경하는 프로그램
- 영문자 출력, do~ while로 프로그램 작성

---------------------------------------------------------------

3). 프로그래밍언어 응용
  (1) 분기문, 반복문
      switch(정수, 문자열 but 대소비교x)
      break는 break에 가장 가까운 반복문을 벗어나는 코드

  (2) 타입 크기 (1byte -> 8bit)
      byte(1byte) : 256(음수, 양수) : -128 ~0, +127
      char(1byte) : 256 영문자 저장, 문자 -> 숫자로 표현
      short(2byte)
      int(4byte)
      long(8byte)

      float(4byte)
      double(8byte)

   (3) 변수
       - Scope(스코프)(범위 또는 {}) : 변수는 스코프 내에서마나 사용가능
       - 변수는 하나의 값만 저장할 수 있다.
       - 변수는 타입을 선언할 때 선언한 타입의 값만 저장할 수 있다.
       - 변수나 객체는 초기화한 후 사용해야 한다.

    (4) 배열 생성 방법
       - 타입[] 이름 = {};
       - 타입[] 이름 = new 타입[] {};
       - 타입[] 이름 = new 타입[배열갯수];

    (5) 자바에서 객체의 구성 요소 3가지 이상
         필드, 생성자, 메소드, 내부함수

    (6) ++변수, 변수++;

    (7) String에 대한 설명 : 기본 또는 객체
       - String name = "코리아아이티";  - 하나의 메모리 값을 저장 후 공유
         String name = new String("코리아아이티");  - 
       
        - 문자열 비교 equals()

     (8) 타입 초기값 설정
        byte b = 0;
        char c ='';
        String str = "";
        int = 0;
        long l = 0L;
        double d = 0.0;
        float f = 0.0f;
        boolean b = false;

        객체 타입은 전부 null

       (9) this, super 키워드
           this(), super() 생성자
     
           -> 나, 자신(현재페이지)을 가리키려면 this
	   상혹하는 부모는 super

실기
1. 60점 이상이면 합격 미만 불합격
2. 무작위 값을 배열에 저장 후 짝수만 출력하는 프로그램
3. 주민번호를 이용하여 남자, 여자를 표시하시오.


--------------------------------------------------

4). 응용SW기초 기술 활용

  (1) Collection Framework 특징
     List는 데이터 중복 저장 허용
     Set 값만 저장 -> 중복 데이터 허용x
     Map key, value로 구성되어있고, Entry에 저장한다.
     FIFO(First In First Out) : Heap(선입선출)
     LIFO(Last IN First Out) : Stack(후입선출)

  (2) 객체지향의 개념
      1) 캡슐화 : 외부에서 정보에 직접 접근 할 수 없도록 하며 연산(getter,setter)를 통해서만 접근
      2) 객체 : 실세계에서 존재하거나 생각하는 것을 프로그래밍한 것
      3) 클래스 : 하나 이상의 객체를 묶어서 표현한 것
      4) 다형성 : 상속 또는 구현한 하위 객체들이 다른 형태의 특성을 갖는 것

  (3) 데이터베이스
      1) 제거 : Drop
         삭제 : 내용만 없애는 것. Delete

      2) SSO : 한번 로그인하여 인증하면 다른 시스템의 권한도 획득하는 것
          ex) 카카오톡 로그인 되어있으면 다른 쪽도 연결 되는 것

      3) 미들웨어: 다른 프로그램들 사이에 위치한 소프트웨어
                      일반적으로 컴파일 형태이기에 내부 동작 확인이 어렵다.
                      1:1 또는 1:n, n:n의 여러가지 형태를 띈다.

          대칭키(비밀키): DES -> 일반적으로 사용(속도 빠름)
          비대칭키(공개키) : RSA(공인인증서) -> 암호화 강도 강함

      4) DRM : 디지털 저작권 관리 기술
	      - 콘텐츠 암호화 기술, 키
	      - 콘텐츠 식별 기술
                  - 콘텐츠 오류 감지 및 복구

      5) 해킹
          SQL Injection : naver.com/?query = "코리아아이티"&code = 1111(불법적인 코드);
          XSS : 자바스크립트 오류
          디도스 : 인터넷 연결을 느리게 해서 서비스를 불가능하게 만듦


실기---
1.Jdbc -> 회원가입 프로그램 작성
 1) 미들웨어, 디비 ,객체, jdbc 프로그래밍
 2) 작업 후 디비 백업해서 프로그램과 압축해서 제출

 3) 관리자 계정 말고 사용자 계정을 생성 후 작업하시오.
    mysqldump -u사용자 비밀번호 mydb > 20231019.dump
 4) 입력, 출력 (INSERT< SELECT)




html--------------------

tut07

01_ex.html
css
js
images

unsplash.com
fonts.google.com

02_ex.html

03_ex.html

04_ex.html

















오전 9:01 2023-10-20***********************************************************

koritbs.cafe24.com

------------------------------------

MYsql 데이터베이스
(1) CUI : cmd
(2) GUI : Workbench



DDL 
DML 
DCL : grant, revoke


shopdb/1234

/*
계정만들기

관리자로 접속 : mysql -uroot  -p  ( mysql 설치할때 기입했던 비밀번호 입력 ) 

mysql 폴더로 들어가기 : use mysql;

사용할 수 있는 아이디인지 확인 : select host, user from user;

관리자가 DB 생성 : create database 생성할DB;

아이디 비밀번호 생성 : create user 아이디@'%' identified by '비밀번호'; 

권한설정 : grant all on 생성한DB.* to 아이디@'%' with grant option;

새로고침 : flush privileges;

사용자계정 접속 : 만든 DB로 접근
mysql -ushopdb -p

use shopdb;
*/




create table item2(
item2_id int,
item2_name varchar(100)
);

create table item(
item_id int,
item_name varchar(100)
);

show tables;

create table cart(
cart_id_int,
cart_item_name varchar()
);

id,pwd => mydb/1234
서버(관리자 1명 : root) 
-> 사용할 수 있는 아이디인지 확인
-> 관리자가 데이터베이스 생성(아이디)
-> 사용자 계정(root) : 아이디, 비밀번호
-> 명령어를 이용해서 생성, 권한설정, 새로고침


DDL : Definition : 정의어 => create, drop, alter(변경)

/*
테이블 이름 변경

Rename
테이블 이름

tbl_board => tbl_article
rename table tbl_board to tbl_article;
*/


/*
추가, 수정

컬럼 추가
ALTER TABLE tbl_article 
ADD tbl_article_date datetime;




컬럼타입 변경
ALTER TABLE tbl_article 
MODIFY COLUMN tbl_board_name varchar(39);

칼럼명 변경
ALTER TABLE tbl_article 
RENAME COLUMN tbl_board_name To tbl_article_name;

컬럼추가 끼워넣기
ALTER TABLE tbl_article 
ADD tbl_article_content varchar(100) AFTER tbl_article_name;
*/


/*
컬럼제거

ALTER TABLE tbl_article 
DROP COLUMN tbl_article_content;
*/




html----------
usemap

05_ex.html

-------------------
form

tut08

01_ex_form.html

 Form
     1. method => 전송 방식(post, get)
      (1) get: 속도 우선, 보안 x, 길이 제한
      (2) post : 안전하게 데이터 처리, 길이 제한 
     
     2. 정보 입력 => 어디 페이지로 이동해서 처리를 할 건지...
     3. encType : 첨부파일
     4. id : 일반적을 자바스크립트 작업
     5. class : 자바스크립트 또는 디자인

     button
     1. type=submit (Enter, click)
     2. type=button (click)

<form 
method="post" 
action="save" 
enctype="multipart/form-data"
 id="" 
class="">
</form>

  <!-- 블록을 인라인으로 float, flex
    display: inline-block;
     -->
    <!-- 블록: 나머지는 block - 브라우저 해상도와 상관없이 무조건 100% 넓이를 가짐-->
    <!-- 인라인: a, span, img, table...: 내용물만큼만 넓이가 만들어짐 -->


















오전 9:00 2023-10-23****************************************************

1. 데이터베이스 백업
백업(mysqldump)<->복원(mysql)
저장할 때 확장자: 20231023_koreait.dump, *.sql

mysqldump -u아이디 -p디비 전체 > 20231023_grp.dump
mysqldump -u아이디 -p디비 테이블 > 20231023_grp.dump

mysql - uroot -p 디비 < 20231023_grp.dump
mysqldump -uroot - p 디비 테이블 > 20231023_grp.dump


CUI



백업하기
mysqldump -ushopdb -p shopdb cart > 20231023_shopdb.dump  - 테이블만
(안되면 root로 접속)
mysqldump -ushopdb(root) -p shopdb > 20231023_all.sql(dump) - 전부다


집어 넣기
mysql -uroot -p shopdb < 20231023_all.sql
(해당 데이터베이스가 있어야함)


GUI

root로 접속하기


-------------------------------------------
DDL
create, drop, alter는 Workbench로 하는 것이 편함

집어넣은 테이블 이름 변경

DML 
insert, select, update, delete

use shopdb;

** drop table if exists employees; (만약 employees폴더가 있으면 지워라.)

create table employees(
emp_id int not null auto_increment,
emp_name varchar(20),
emp_salary int,
primary key(emp_id)
);


insert into employees values(null, '홍길동',100);

insert into employees(emp_id, emp_name, emp_salary) values(null,'이형의',200);

not null은 필수
insert into employees(emp_id) values(null);

insert into employees values(null, '부산', 300), (null ,'서울', 400), (null, '광주', 500);


select * from employees;

select * from employees where emp_name is null; (이름이 null 검색)
select * from employees where emp_name is not null; (이름이 not null 검색)

select * from employees where emp_salary >= 300; (300이상인 컬럼 검색)

select count(*) as '사원 수' from employees where emp_salary >= 300; (300이상인 사원 수 검색)

집계함수 : 결과가 하나 => count(), max(), min(), sum(), avg(),
	distinct(컬럼명), distinct 컬럼명: 중복제거

+ group by + having 조건

select sum(emp_salary) as '사원 수' from employees where emp_salary >= 300; (300이상의 합계 검색)

select max(emp_salary) as '사원 수' from employees where emp_salary >= 300; (300이상의 합계 검색)

select min(emp_salary) as '사원 수' from employees where emp_salary >= 300; (300이상의 합계 검색)



번호, 아이디 ,이름, 비번 ,성별, 자기소개

M,F (남,여)

create table member(
mem_id int not null auto_increment,
mem_name varchar(10) not null,
mem_pwd varchar(20) not null,
mem_gender char(1) not null,
mem_intro text,
mem_regdate date,
primary key(mem_id)
);

insert into member values(null, '홍길동', '1234', 'M', '자기소개1', now());
insert into member values(null, '홍길동', '5678', 'M', '자기소개2', sysdate());
insert into member values(null, '이형의', '0000', 'F', '자기소개3', curdate());

insert into member values(null, '김부산', '8888', 'M', '자기소개4', now() +1);

중복제거
select distinct mem_name from member;

2023년 1월 1 ~ 2023년 12월 31일에 입사한 사원의 이름과 날짜를 출력하시오
select mem_name, mem_regdate from member where mem_regdate >= '2023-01-01' AND mem_regdate <= '2023-12-31';

2023년 1월 1 ~ 2023년 12월 31일에 입사한 사원의 수를 출력하시오
select count(*) as '사원의 수' from member  where mem_regdate >= '2023-01-01' AND mem_regdate <= '2023-12-31';

성별이 남자인 사람의 아이디와 성별을 출력하시오
select mem_id, mem_gender from member where mem_gender = 'M';

성별이 남자인 사람의 수를 출력하되 컬럼명은 회원(남자)로 출력하시오
select count(*) as '남자' from member where mem_gender = 'M';

= 홍길동         %홍~
일치 조건 <-> 유사 검색

입사일이 2023-01-01 ~ 2023-10-31인 사람의 수를 출력하시오.
select count(*) from member where mem_regdate >= '2023-01-01' and mem_regdate <= '2023-12-31';

컬럼명 Between A and B; (속도가 좀 빠름)
입사일이 2023-01-01 ~ 2023-12-31인 사람의 수를 출력하시오.
select count(*) from member where mem_regdate between '2023-01-01' and '2023-12-31';

------------------------------------------------------------
성별이 여자인 사람의 이름과 성별을 출력하시오.

AND 연산 : 이고, 이면서 - 조건을 모두 만족
OR 연산 : 이거나, 또는 - 조건 중 하나만 만족

- 성별이 여자인 사람의 이름과 성별을 출력하시오.
select mem_name, mem_gender from member where mem_gender = 'F';

OR연산
성별이 남자이거나 여자인 사람의 이름과 성별을 출력하시오.
select mem_name, mem_gender from member where mem_gender = 'M' or mem_gender = 'F';

컬럼명 IN(값1, 값2, 값3)
성별이 남자이거나 여자인 사람의 이름과 성별을 출력하시오.
select mem_name, mem_gender from member where mem_gender in ('M','F');

---------------------------------------------------------------
유사어 검색 : _ , %
_ : 글자 한 글자
% : 글자 수 제한 x

컬럼명 like '%검색어%'

컬럼명 like '%검색어'
컬럼명 like '검색어%'


이름이 홍으로 시작하는 사람의 모든 정보를 출력하시오.
select * from member where mem_name like '%홍%';

이름이 홍으로 시작하는 사람의 수를 출력하시오.
select count(*) as '사람의 수' from member where mem_name like '홍%';

mem_intro 컬럼에 자기소개가 포함되어있는 회원의 회원번호와, 이름, 성별을 출력하시오.
select mem_id, mem_name, mem_gender from member where mem_intro like '%자기소개%';

mem_intro 컬럼에 자기소개가 포함되어있는 회원의 회원번호와, 이름, 성별을 출력하시오.
단, 이름의 오름차순(asc),으로 정렬하시오.
select mem_id, mem_name, mem_gender from member where mem_intro like '%자기소개%' order by mem_name asc;

내림차순 desc
select mem_id, mem_name, mem_gender from member where mem_intro like '%자기소개%' order by mem_name desc;

조건 + 정렬 + (limit)

mem_intro 컬럼에 자기소개가 포함되어있는 회원 정보를 모두 출력하시오.
단, 이름의 내림차순(desc)으로 출력하되 최근 2개만 출력되도록 하시오.

select * from member where mem_intro like '%자기소개%' order by mem_name desc limit 2;








html----------------------------------------------------------
input : 22가지 type 지원 기본 type은 text form과 같이 가장 많이 사용됨
<input type="number" min="0" max="10"> <br />
 <label for="">검색어 입력</label> 이름표
fieldset : 폼 요소를 그룹으로 묶음
 <!--radio: name은 같아야 3개중 하나 선택 가능-->
<!--checkbox 다중선택 가능-->
select name="" id="" multiple>  <!--다중선택-->
 <input type="file">
<input type="file" multiple>



















오전 9:05 2023-10-25***********************************************************
1. 자격증
- 정보처리기능사 과정형 자격증 취득(실기)
   JAVA, Tomcat, Eclipse, oracle
- 검정형(실기)

2. 취업
- java, spring boot(내장형 톰캣서버), thymeleaf, Mysql



heidisql.com
GUI 환경에서 데이터베이스 관리하는 툴
------------------------------------------------

1. 개발 프로그램(groupware -> grpdb -> 테이블)
   (1) View 구성(html, css, js)
   (2) form 되어있는  view -> db 생성 -> 테이블 생성
   (3) 테이블 확인 후 객체 생성
   (4) Spring에서 환경 설정 후 작업

2. 
use grpdb;


create table employees(
emp_id int not null auto_increment,
emp_name varchar(5) not null,
emp_salary int(4) not null,
emp_hire date,
primary key(emp_id)
)auto_increment=100;

insert into employees values
(null, '홍길동', 5, now()), 
(null, '김펄슨', 10, now()),
(null, '이휴먼', 20, now())
;

select ~ where ~ order by  ~ limit
asc 오름
desc 내림

select * from employees order by emp_id desc;


집계함수는 결과가 1만 출력되므로  order by limit 사용 x
count, distinct, sum, avg, max, min

select count(*) as '사원수' from employees;
select sum(emp_salary) as '급여의 총합' from employees;

이름과 급여만 출력하시오
단 이름의 오름차순으로 정렬하시오
select emp_name, emp_salary from employees order by emp_name asc;
order by emp_name asc, emp_salary desc;

회원번호, 이름을 출력하시오.
단, 입사일이 2023년 01월 01일 이후에 입사한 사원만 출력하시오.

select count(*) as '검색된 회원 수' from employees where emp_hire >= '2023-01-01';

2022~2023년에 입사한 직원의 수를 구하시오.
And(컬럼 여러개)
select count(*) as '2023년에 입사한 회원수' from employees
 where emp_hire >= '2023-01-01' And emp_hire <= '2023-12-31';

emp_hire >= 2022-01-01 and emp_hire <= 2022-12-31

컬럼명 Between 조건1 and 조건2;

2023년에 입사한 직원의 이름을 출력하시오
단 이름을 기준으로 내림차순으로 정렬하시오0
컬럼명 between 조건1 and 조건2;

select emp_name from employees
where emp_hire between '2023-01-01' and '2023-12-31' order by emp_name desc;








concat----------------------------------------------


데이터와 데이터를 연결

concat(데이터1, 데이터2)
연습출력

create table member(
tel1 010
tel2 1234
tel3 5678
);

100 홍길동

select concat('tel1','-','tel2','-', 'tel3') as 'tel';

select concat(emp_id,' => ', emp_name) from employees;




*단위(백만원)
급여가 천만원 이상인 직원의 사번과 이름을 출력하시오.

select emp_id, emp_name from employees where emp_salary >= 10;




일치
사번이 101번이고 이름이 홍길동인 사원정보를 출력하시오.
select * from employees where emp_id = 101 and emp_name = '김펄슨';




유사 검색 : where 컬럼명 like %검색어%;
이름에 '철'이 포함되어 있는 사람의 이름을 출력하시오.
select emp_name from employees where emp_name like '%펄%';

성이 '김'인 사람을 출력하시오
select count(*) as '김으로 시작하는 직원 수' from employees
where emp_name like '%김%';

select concat(count(*), '명 입니다') as '김으로 시작하는 직원 수' from employees
where emp_name like '%김%';

select * from employees;



limit ---------------------------------------

사원을 아이디의 내림차순으로 정렬하고 최근에 입사한 2명만 출력하시오.


select  * from employees order by emp_id desc limit 2;

사원을 아이디의 내림차순으로 정렬하고 입사일이 제일 오래된 회원을 출력하시오.

select * from employees order by emp_id desc limit 1, 1; (limit 배열시작번호, 개수)

select * from employees order by emp_id desc limit 1, 2;









&&group by---------------------------------------------------------------------



select 회사명, 집계함수 from car group by 회사명;


현대차(3), 기아차(2), 쌍용차(1)

create table car(
company varchar(20) not null,
carName varchar(20) not null
);

등록된 전체 차종의 수는 10입니다.
select count(*) as '등록된 전체 차종의 수는' from car;

현대차(3), 기아차(2), 쌍용차(1)

select company, count(*) as cnt from car group by company;

insert into car values('현대차', '아반떼');
insert into car values('현대차', '소나타');
insert into car values('현대차', '제네시스');

insert into car values('기아차', '모닝');
insert into car values('기아차', 'k3');
insert into car values('기아차', 'k5');
insert into car values('기아차', 'k7');
insert into car values('기아차', 'k9');

 insert into car values('쌍용차', '렉스턴');
 insert into car values('쌍용차', '티볼리');

itemName, 집계함수 => groub by 

여성의류 (117,445)
남성의류 (117,445)
가방/잡화 (117,445)

select itemName, count(*) as cnt from items 
group by company 
order by company asc;

요약된 회사의 차량 개수가 5보다 큰 것만 표시하시오.
group by 앞에서 표시한 일반컬럼 having 앞에서 표시한 집계함수;

현대차(개수)

select * from car;

select company, count(*) from car group by company;

group by ~ having
select company, count(*) from car group by company having count(*) >= 5;

select company, count(*) as 'cnt' from car 
group by company 
having count(*) >= 5 
order by company 
limit 0,1;





html---------------------------------------
tut09
login.html
-css
-images
-js

fonts.google.com -> A1
onclick();

addEventListener();

frmcheck.js
reset.css
style.css



















오전 9:11 2023-10-26************************************************

1. group by

부서별 직원 수를 출력하시오

create table company ();

use grpdb;
create table company(
com_id int not null auto_increment,
com_buseo varchar(10) not null,
com_name varchar(10),
primary key(com_id)
);

insert into company values( null, '인사과','홍펄슨');
insert into company values( null, '인사과','강우먼');
insert into company values( null, '자재과','김휴먼');
insert into company values( null, '임원실','나대표');
insert into company values( null, '임원실','박상무');
insert into company values( null, '비서실','이비서');


select count(*) as '전체 사원 수' from company;


select count(com_buseo) from company;


중복제거 : distinct
select count(distinct(com_buseo)) as '전체 부서 수' from company; 

부서별 직원 수를 출력하시오 단 직원 수가 2명 이상인 부서만 출력하시오.
예시 - 인사과(3), 자재과(10), 임원수(2) 형태로 출력하시오.

select com_buseo, count(com_name) from company
group by com_buseo 
having count(com_name) >= 2
order by com_buseo limit 1,1;



-----------------------------------------------
Mysql 내장함수(메소드)

create table scores(
family char(1),
name varchar(10),
passwd varchar(10),
score int,
birth date
);

insert into scores values('h','홍길동' ,'1234', 82, '1990-01-01');
insert into scores values('k', '김철수','0000', 95.77777, '2000-01-01');

insert into scores values('', 'null', 'null', 0, '2010-01-01');

점수가 0보다 크면 응시 아니면 미응시로 출력하시오.
select if(score > 0, '응시', '미응시') as '응시/미응시' from scores;


1990년대 생은 '90s' , 2000년대 생은 '00s', 2010년대 생은 '01s'로 표시하시오
select if(birth >= '1990-01-01', '90s', '00s') as 'Generation' from scores;



family 컬럼의 값을 대문자: upper(), Lower()
select upper(family) from scores;






trim 좌우공백제거
insert into scores values('c', '코리아', ' 1234&', 99, '2010-01-01');

select passwd from scores;
select trim(passwd) from scores;







replace(컬럼명, '원본', '바꿀내용')

select passwd from scores;
select replace(trim(passwd), '&', ' ') from scores;



create table tel(
tel1 char(3),
tel2 char(4),
tel3 char(4)
);

insert into tel values('010', '1234', '6789');
insert into tel values('010', '5555', '5432');




010-1234-5678
이어붙이기(concat), 잘라내기(left,right), 바꾸기(6789 -> ****)

select concat(tel1, '-', tel2,'-' ,tel3) from tel;

통신사 번호
select left(tel1, 3) from tel;

select trim(left(concat(tel1, '-', tel2,'-' ,tel3),3))  from tel;

휴대폰번호 끝자리만 ****

select insert(trim(right(concat(tel1, tel2, tel3), 4)), 1,4 ,'****') from tel;

	right(값, 개수)

select insert('5678',1,4, '****')

휴대폰번호 끝자리



0-------------------------------
create table timer(
time1 datetime,
time2 datetime,
time3 datetime,
time4 datetime
);

insert into timer values(now(), sysdate(), curdate(), current_timestamp());

select time1 from timer;

년도 year()
월 month()
일 day()

select year(time1), month(time1), day(time1) from timer;

날짜 포맷 변경 date_format(값, 형식)
날짜 포맷 변경 date_format(값,'%Y-%m-%d');
날짜 포맷 변경 date_format(값,'%Y.%m.%d')
날짜 포맷 변경 date_format(값,'%Y-%m-%d %H:%i:%s')

select time1 from timer;

select date_format(time1, '%Y.%m.%d') from timer;

select date_format(time1, '%Y/%m/%d') from timer;

select date_format(time1, '%Y/%m/%d %H:%i:%s') from timer;



-----------------------------------------------------------------------
테이블 조인(primary key, foreign key)
- 테이블에 null 값이 들어가는 x

shop -> member, items, cart, seller, buyer

create table member(
userid varchar(10),
passwd varchar(10),
cart_item varchar(20),
seller_item varchar(20),
buy_item varchar(20)
);

insert into member values('koreait', '1234', '', '', '' );
insert into member values('koreait2', '0000', '', '', '' );

);

shop -> member, buyer

create table member(
userid varchar(20) not null,
passwd varchar(10) not null,
name varchar(20) not null,
regdate date,
primary key(userid)
);

create table buyer(
item_name varchar(20),
item_price int,
item_amount int,
item_regdate datetime,
userid varchar(20) not null,
foreign key(userid) references member(userid)
);


- 조인 (연결해서 하나처럼 사용할 때) -
1. pk(기본키: 중요도 가장) : null 값, 중복 데이터 x
2. fk(외래키 : 자식 테이블) 
   - 외래키는 부모테이블의 기본키와 동일해야 한다. (참조 무결성)
     (외래키로 지정하는 컬럼은 기본키의 데이터 타입, 사이즈와 동일해야 한다)

member, buyer 삭제

삭제는 자식부터 ..

drop table buyer;
drop table member;

fk(외래키 : 자식 테이블)





html------------------------------------

tut10
- images
- css

01_ex_clrs.html
색상 #16진수(0 ~ 9, A B C D E F)
 r  g  b 빛의 3원색 모두를 섞으면 흰색
00 00 00

rgba a는 색을 투명도 처리 (0~1)

red, green, blue, skyblue

02_ex_bg.html




























오전 9:02 2023-10-27**************************************************


join + erd

쇼핑몰 shopdb

회원가입 users
create table users(
userid varchar(20) not null,
name varchar(10) not null,
primary key(userid)
);

insert into users values('koreait', '홍길동');

카트 cart
create table cart(
pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
cart_id int not null auto_increment,
userid varchar(20) not null,
primary key(cart_id),
foreign key(userid) references users(userid)
);

insert into cart values('101', 'LG IBM Computer', 10, null, 'koreait');
insert into cart values('102', 'Apple Iphone', 15, null, 'koreait');

아이디, 이름, 상품명, 가격을 표시하시오. (t1 inner join t2 on 조건)

select U.userid, U.name,C.pro_name, C.pro_price 
from users U 
inner join cart C on 
U.userid = C.userid;

상품구매 buy 
create table buy(
buy_id int not null auto_increment,

pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
pro_count int,
pro_delivery char(1),
userid varchar(20) not null,
primary key(buy_id),
foreign key(userid) references users(userid)
);

카테고리 category
create table category(
cate_name varchar(20) not null,
primary key(cate_name)
);

insert into category values('컴퓨터');
insert into category values('노트북');
insert into category values('스마트폰');

상품등록 product
create table product(
pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
cate_name varchar(20) not null, 
primary key(pro_num),
foreign key(cate_name) references category(cate_name)
on update cascade
on delete restrict 
);

insert into product values('101', 'LG 컴퓨터', 1, 1, '컴퓨터');

delete from category where cate_name = '컴퓨터';

update category set cate_name = '컴퓨터' where cate_name = '컴퓨터2';
select * from category;
select* from product;


insert into product values('102', '갤럭시 135', 2, 2, '스마트폰');


외래키 무결성 제약조건 삭제는 자식부터
update : 대분류를 변경하게 된다면... 상품을...
on update cascade - 연관성있는것도 같이 변경

delete : 대분류를 삭제하게 된다면... 상품을...
on delete restrict - 오류를 내라




연결 t1, t2 연결해서 = 1
category, product를 연결해서 대분류, 상품번호, 상품명, 구매개수, 가격 순으로 출력
단, 대분류가 같은것만 출력하시오.

select 
C.cate_name, 
P.pro_num, 
P.pro_name, 
P.pro_count, 
P.pro_price 

from category C, product P
where C .cate_name = P.cate_name; 

inner join t2
select 출력컬럼 from t1, t2 where t1.컬럼 = t2.컬럼;
= select 출력컬럼 from t1 inner join t2 on t1.컬럼 = t2.컬럼;

분류 테이블 컬럼 전부, 상품 테이블 컬럼 전부를 출력하시오.
select C.*, P.* from category C
inner join product P on 
C.cate_name = P.cate_name;

select C.*, P.* from category C
inner join product P on 
C.cate_name = P.cate_name;

분류 테이블의 분류 컬럼과 상품 테이블의 상품번호, 상품이름만 출력하시오 
(t1 inner join t2 on 조건)

select A.cate_name, B.pro_num, B.pro_name from category A inner join product B on  A.cate_name = B.cate_name;


t3
select 출력컬럼 from t1 inner join t2 on t1.컬럼 = t2.컬럼
inner join t3 on t2.컬럼 = t3.컬럼;






다중 게시판

config(게시판 설정)
//code 디비 테이블 이름 = notice(공지사항) -> create table notice();

create table config(
code varchar(20) not null,
title varchar(100) not null,
color varchar(20) not null,
primary key(code)
);

board(게시판)

create table notice_board(
b_id int not null auto_increment,
subject varchar(100) not null,
name varchar(10),
content text,
regdate date,
code varchar(20) not null,
primary key(b_id) ,
foreign key(code) references config(code) 
on update cascade 
on delete restrict
);




html---------------------------------------------------
ex01
website.html
- images
- css

fonts.google.com : roboto mono

unsplash.com: outdoors
fontawesome cdn : google facebook insta























오전 9:01 2023-10-30*****************************************************

프로젝트
- 미니 쇼핑몰(대분류1개)
- 와디즈(클라우딩)
- 그룹웨어
- erp (급여관리, 인사관리)
- 다중게시판
- 투표

pk - fk -> inner join
t1, t2, t3

대분류 소분류 상품등록

부서   직책    사원
dept   pos     emp



인사과
use grpdb;

create table dept(
dept_name varchar(20) not null,
primary key(dept_name)
);


insert into dept values('인사과');
insert into dept values('비서실');
insert into dept values('임원실');


create table pos(
pos_name varchar(20) not null,
dept_name varchar(20) not null,
primary key(pos_name),
foreign key(dept_name) references dept(dept_name)
on update cascade
on delete restrict
);

insert into pos values('대표이사', '임원실');
insert into pos values('기술이사', '임원실');
insert into pos values('비서실장', '비서실');
insert into pos values('인사과장', '인사과');
insert into pos values('대리', '인사과');
insert into pos values('사원', '인사과');


임원실(2), 인사과(3), 비서실(1)

부서별 직책의 수를 출력하시오. 단 직책 수가 2개 이상인 것만 출력
select dept_name, count(pos_name) from pos
group by dept_name
having count(pos_name)>= 2;

create table emp(
emp_id int not null auto_increment,
emp_email varchar(50) not null,
emp_passwd varchar(20) not null,
emp_name varchar(20) not null,
pos_name varchar(20) not null,
primary key(emp_id),
foreign key(pos_name) references pos(pos_name)
on update cascade
on delete restrict
);

insert into emp values(null, 'mail@mail.com', '1111', '홍길순','인사과장');
insert into emp values(null, 'mail2@mail.com', '2222', '이홍순','인사과장');
insert into emp values(null, 'mail3@mail.com', '3333', '김갑칠','대표이사');
insert into emp values(null, 'mail4@mail.com', '4444', '강점철','비서실장');

인사과장(2), 대표이사(1), 비서실장
직책별 사원 수를 구하시오 단 직책의 내림차순으로 출력하시오

select pos_name, count(emp_name) from emp
group by pos_name order by pos_name desc;




t1(dept) t2(pos) t3(emp)
부서(dept), 직책순으로 출력하시오(t1,t2)
t1 inner join t2 on t1.컬럼 = t2.컬럼

select D.dept_name as deptName, P.pos_name as posName from dept D inner join pos P on D.dept_name = P.dept_name;





부서(dept), 직책순, 사원명을 출력하시오 (t1,t2,t3)
... t1 inner join t2 on t1.컬럼 = t2.컬럼
inner join t3 on t2.컬럼 = t3.컬럼;

3 조인 할때는 연결되어있는 컬럼순으로 연결


select D.dept_name as deptName, P.pos_name posName, E.emp_name as empName from dept D 
inner join pos P on D.dept_name = P.dept_name
inner join emp E on P.pos_name = E.pos_name; 


부서명으로 오름차순 정렬

select D.dept_name, P.pos_name, E.emp_name from dept D inner join pos P on D.dept_name = P.pos_name 
inner join emp E on P.pos_name = E.pos_name order by D.dept_name asc limit 0,1;

==============================================

createm drop , alter
insert, select, update, delete


// 답변형
번호, 제목, 작성자, 작성일, 조회수, 

create table board(
b_id int not null auto_increment,
b_title varchar(255),
b_writer varchar(10),
b_date datetime,
b_visit int,
b_grp int,
b_depth int,
b_level int,
primary key(b_id)
);

insert into board(b_title, b_writer, b_date) values('공지사항', '관리자', now());
insert into board(b_title, b_writer, b_date) values('답변형 게시판', '관리자2', now());
insert into board(b_title, b_writer, b_date) values('이미지 게시판', '관리자3', now());

select * from board;

1.전체 게시물 수를 출력하시오,
select count(*) as '전체 게시물 수' from board;


2. 전체 게시물을 pk로 내림차순 정렬하시오.
select * from board order by b_id desc;

3. 게시물 중 가장 오래된 2개를 출력하시오.
select * from board order by b_id = '1' desc limit 0, 2;

4. 게시물 제목이 '공지사항'인 것만 출력하시오.
select * from board where b_title = '공지사항';

5. 게시물 제목이 '게시판'이란 글자를 포함하고 있는 값을 출력하시오.
select * from board where b_title like  '%게시판%';

6. 게시물이 2023년에 등록된 자료만 내림차순으로 출력하시오.
select * from board where b_date between '2023-01-01' and '2023-12-31';




Update 
update 테이블 이름 set 변경할컬럼명 = '변경할값1', 변경할 컬럼명2 = '변경할값2'... where 조건 = '값';

1. pk가 1번 게시물의 작성자를 '홍길동'으로 변경하시오.
update board set b_writer = '홍길동' where b_id ='1';

2. pk가 1번 게시물의 작성자를 '김갑철', 등록일을 현재날짜, 제목을 'QnA'로변경하시오.
update board set b_writer = '김갑철', b_date = now() , b_title = 'QnA' where b_id = '1';

3. board 테이블의 작성자 이름을 모두 '코리아'로 변경하시오.
update board set b_writer = '코리아';

=======================================

delete 데이터 삭제

게시판 제목이 '답변형 게시판'인 레코드를 삭제하시오.
delete from board where b_title = '답변형 게시판';

게시판 제목이 '이미지 게시판'이면서 pk가 3인 레코드를 삭제하시오.
delete from board where b_title = '이미지 게시판' and b_id ='3';

게시판 제목이 'QnA' 이면서 pk가 1인 레코드를 검색하시오.
select * from board where b_title = '이미지 레코드' and b_id = '1';

게시판 내용 전체를 삭제하시오
delete from board;

===================================================

view 가상
create view 보안 -> 필요한 컬럼만 보여줄 때
물리테이블x ->  논리적인 테이블(테이블 복사x)

create table member -> create table member2;
번호, 아이디, 이름, 비밀번호, 주소
-> 번호, 주소

create view member_v -> drop view member_v;

create table member(
id int not null auto_increment,
name varchar(20),
addr varchar(20),
jumin char(14),
primary key(id)
);

insert into member values(null, '이철직', '부산광역시', '012345-1234567');

create view member3 as select id, addr from member; 물리적 테이블

create view member_v as select id, addr from member; 논리적 테이블

select * from member_v;

drop view member_v;

===============================================

정리

insert into 테이블명 values();
select * from 테이블명;
update 테이블명 set 바꿀컬럼 = 바꿀값 where 바꿀pk = 값;
delete from 테이블명 where 삭제할pk = 값;










html----------------------
position

tut11

가로배치 
float 
display: inline-block
display: flex

tut01
-tut01.html
-tut02.html

























오전 8:56 2023-10-31**********************************************************

1. html 반응형 -> 전체사이트 작업
2. javascript (3)


DCL : 보안 -> Grant(권한설정), revoke(권한제거)
---------------------------------------
1. 계정 생성 - root로 접속
(1) 계정 정보 확인 mysql 디비 - user (host, user)   - 
select host, user from user;

(2) 계정 = 데이터베이스 이름 동일하게 생성 (관리자가 부여) 
create user grp@'%' identified by '1234';
(%: 다른 아이피로 접근 가능)

(3) 계정 생성 후 생성된 디비에 권한 부여 
grant all on grp.* to grp@'%' with grant option;

(4) 새로고침 flush privileges

------------------------------
<코리아아이티 아카데미 그룹웨어>
1. html,css,js - ajax 

2. database

부서명, 직책명, 사원가입, 


부서
create table dept(             
dept_code char(3) not null,
dept_name varchar(20) not null,
primary key(dept_code)
);

insert into dept values('100', '인사과');
insert into dept values('200', '자재과');
insert into dept values('300', '비서실');
insert into dept values('900', '임원실');

select count(dept_code) as '부서' from dept;
select * from dept;
select * from dept order by dept_code asc;


직책명 
부장 100, 대리 200, 사원 300

create table pos(
pos_code char(3) not null,
pos_name varchar(10) not null,
dept_code varchar(3) not null,
primary key(pos_code),
foreign key(dept_code) references dept(dept_code)
on update cascade
on delete restrict
);

직책코드 직책명 부서코드
insert into pos values('100', '인사과장', '100');
insert into pos values('103', '사원', '100');
insert into pos values('301', '비서실장', '300');
insert into pos values('901', '대표이사', '900');
insert into pos values('902', '기술이사', '900');

select * from pos order by dept_code desc;
2단 정렬
select * from pos order by dept_code desc, pos_name desc;

임원실 검색
select * from pos where dept_code = '900';


create table emp(
id int not null auto_increment,
emp_email varchar(50) not null,
emp_passwd varchar(50) not null,
emp_name varchar(10) not null,
pos_code char(3) not null,

primary key(id),
foreign key(pos_code) references pos(pos_code)
on update cascade
on delete restrict
);

insert into emp values(null, 'mail@mail.com', '1234', '김덕평', '100');



인사과(2) 비서실(1) 임원실(2)

select A.dept_name, count(B.pos_code) from dept A
inner join pos B on A.dept_code = B.dept_code 
group by A.dept_name;


인사과 인사과장 김덕평 순으로 출력하시오.
t1 inner join t2 on t1.pk=t2.fk 
inner join t3 on t2.pk = t3.fk;

select D.dept_name, P.pos_name, E.emp_name from dept D inner join pos P 
on D.dept_code = P.dept_code
inner join emp E on P.pos_code = E.pos_code;



사원 테이블에서 직책이 '100'이고 사원번호 1번인 사원의 사원명을 김척척로 변경하시오.
update 테이블명 set 변경 where 조건 = 값;

update emp set emp_name = '김척척' where pos_code = '100' and id = 1;

이름이 김척척인 사원의 이메일을 'busan@busan.co.kr', 이름을 '홍길동'으로 변경하시오.update emp set emp_name = '김척척' where pos_code = '100' and id = 1;

update emp set emp_email = 'busan@busan.co.kr', emp_name = '홍길동' where emp_name = '김척척';


이메일이 'busan@busan.co.kr'이거나 비밀번호가 '1234'인 사원의 정보를 삭제하시오.

delete from emp where emp_email = 'busan@busan.co.kr' or emp_passwd = '1234';


view : 논리적(가상) 테이블을 생성해서 보안 처리

create view emp_v as select emp_email, emp_name from emp;

계정삭제



게시판 환경설정, 게시판, 댓글

select * from emp;

3. Spring boot (객체)





html-=--------------------------

div > a {}
div + a{}
div ~ a{}

div a{
color:#000;
}


selector 선택자
1. 속성 선택: <input type = "text"> => []
^ : 시작
$ : 끝
* : 포함하는 것
2. class :.
3. id : #




res

1. 반응형 사이트 : 방법론

2. 해상도 : 미디어 쿼리를 이용해서 해상도 설정 후 작업
Iphone 3 : 320px
tap : 768px
lap : 1280px
-> desktop

max-width(화면 크기 설정) : 기본은 내용크기 최대 max-width
max-width : 100px; - 100px 이상 안커짐

min-width : 최소 100px 최대 모니터 크기
min-width : 100px;

3. 화면 크기 : max-width, min-width
(1) 내가 처음 작업을 laptop 맞춰서 작업을 한다면
    lap -> tap -> mobile 순으로
 처음 해상도는 미디어 쿼리 생략 가능

(2) mobile(min-width) 먼저 작업
    mobile -> tap -> lap,desktop
처음 해상도는 미디어 쿼리 생략 가능





















오전 8:51 2023-11-01******************************************

html, css, js (json, ajax-백엔드) + db + spring
- 코드 정렬, ppt => 이력서, 자기소개서, 기술 경력서

11.20 스프링 부트 
1. 관리자 페이지 : 반응형
게시판 - 회원가입 -> 다중게시판


-----------------------------------
tut06
get
<p>코리아아이티</p>
add

숨기기 */
            /* visibility: hidden; */
            /* display: block; */
            /* display: none; */




flex-direction: row : 왼쪽에서부터 오른쪽으로 배치
 flex-direction: column : 위에서 아래로 배치

pc ->모바일 로 테스트
flex: 1;
flex-grow 늘릴때
flex-shrink 줄일때






















오전 9:01 2023-11-02****************************************************

참고자료
사용자페이지
website template
responsive template

관리자페이지
admin dashboard
dashboard template
login template

구글 머티리얼
google material
style -> color



기능
function boxChange(){
           document.querySelector(원 클래스명).classList.toggle(변경 클래스명);
        }

실행
        document.querySelector("button").onclick = boxChange;


addEventListener 사용시
기능
function 함수명(e){
            e.preventDefault();
            document.body.classList.toggle(변경 클래스명);
        }
실행
        document.querySelector(버튼).addEventListener('click',함수명);

 document.querySelector("input[type=submit]").addEventListener("click",function (e){
            e.preventDefault();
            if(frm.elements.userid.value ==""){
                alert("아이디를 입력하세요");
                frm.elements.userid.focus();
                return false;
            }
        })





