1. jdk 다운로드 및 설치
 - jdk 다운로드 : 개발
 - jre : 자바프로그램을 실행만
 - url : www.oracle.com -> products -> java -> Download Java Now

윈도우 키 + e : 탐색기
윈도우 키 + m : 바탕화면 바로가기
윈도우 키 + r : 실행

2. Notepad ++

3. IDE : 프로그램 개발을 편하게 하기 위한 통합개발툴
  - eclipse, IntelliJ
  - www.eclipse.org : j2ee, j2se

4. 고정배열[10], 동적배열<10>
   ~ ArayList, Hashmap
   객체 : 회원가입 => 아이디(글자), 비밀번호(숫자)
   
   자바 = Native Java =  표준 자바(로컬 자바)
   웹 자바 = spring = spring framework = spring boot
   
   
   html5(화면 구성), css(화면 디자인)
   Javascript = 서버 작업을 x => node.js => 서버 작업
   => jquery, Ajax, React.js, vue.js, Angular.js
	        json
  데이터베이스 
  - 관계형 데이터베이스(백엔드) : Mysql(Mariadb), Mssql, Oracle
  - NoSQL : MongoDB(프론트엔드)
 변수 => 이름규칙


--------------------------------------------------------------------------------------------------------------
취업 준비 : 포트폴리오 주제


-------------------------------------------------------------------------------------------------------------
1.jdk 설치 후 환경변수 설정
  내 pc -> 속성 -> 고급시스템 설정 -> 고급 -> 환경변수 -> 시스템 변수 -> Path, JAVA_HOME 설정
  -> 찾아보기(path는 bin, JAVA_HOME은 bin은 빼고)
2. 설치 확인
윈도우 키 + r : 실행 
cmd -> javac, java로 설치 확인

 
3. bin 실행 파일이 저장된 폴더
    컴퓨터 0, 1 -> a(00000011)
   - 코드 작성 <-> javac로 컴파일() <-> 	      java 실행 <-> 화면을 볼 수 있음
         a 	      -> 컴퓨터가 읽을 수 있게 변환 -> 000000011
	compiler = 포팅(변환)

   lib : 추가로 필요한 프로그램을 저장되는 곳(jar로 압출된 파일)
         db-connect.jar

---------------------------------------------------------------------------------------------------------
1. 자바 파일 생성(클래스-> 하나의 프로그램)
  - 클래스(객체) : 변수, 메소드(동작), getter, setter 모든 것을 포함하고 있는 덩어리
  - 파일이름 = 클래스이름 동일하게 작성, 클래스 이름 첫글자는 대문자
  - 자바는 대소문자 정확하게 지켜서 작성
  

  Hello World~ 출력하는 자바 프로그램 작성 
 1. 클래스 : public class 클래스이름 {}
  

	사람이 작성한 영어를 컴퓨터가 인식 할 수 있게 javac
	실행은 java

	1) javac 파일이름.java
	2) java 파일이름

	javac -d . 파일이름.java


------------------------------------------------------------------------------------------------------------

print() : 이어 적을 때
println() : 개행(줄바꿈 할때)


1. Hello
   World 두 줄로 출력하는 프로그램 작성
   (0) 자바에서는 폴더(html,css,js)가 아니라 패키지(.java,.class)
        Java Project 큰 폴더
   (1) 파일이름 : Hello.java
   (2) 주석 작성 :  유지보수 할 때 설명 글(프로그램으로 실행되지 x)
       여러 줄일 때 : /* 설명 */
       한줄일 때 : //
   (3) 클래스 생성 :
   (4) 출력 코드 :


이름규칙
1. 패키지, 메소드, 변수 이름은 소문자 시작
    - ** 단어와 단어가 이어질 때는 이어지는 단어의 첫글자는 대문자 **
     ex) num
          num + string => numString  (카멜표기법)
          log + in => login
2. 클래스는 대문자 시작

3.
강형 타입 체크 프로그램
  C,C++,Java
- 타입을 정확하게 체크
  int 10
  double 0.1
  float 
  String abcde

약형 타입 체크 프로그램
  Javascript, 웹언어
- 10, abcde
- let 10
- let abcde

---------------------------------------------------
1. Primitive Type(기본형) = 스택메모리에 저장
정수 : int
실수 : double
논리형 : boolean


2. Reference Type(논리형) = 힙 메모리에 저장
문자열 : String
정수 :  Integer
실수 : Double
논리형 : Boolean
객체, 배열
List<Integer>



----------------------------------------------------------
100 숫자를 출력하시오
단, 기존 자바 프로젝트를 활용한다.

1. 클래스 이름은 Var.java
2. 주석
3. 변수 이름은 num 
4. 정수값 100 입력
5. 출력

	

오후 3:57 2023-09-08************************************************************************************************
1. 컴퓨터 언어론
  - 절차지향 : ~~~제어문까지 ex) C

  - 객체지향 방법론 따라야함 : Object O P ex) C++, Java, C#
   - 객체, 상속,
   단점) 초반 설계할 때 어렵다 => 추가, 유지보수가 편함
	보안에 조금 더 이점

2. 프로그래밍은 중복되는 걸 x => 유지보수가 편하게 바꾸려는 성격 또는 코드 짧게
	
	if(){}
	if()
	?

---------------------------------------------------------------
설치 (2)

1. JDK 다운로드 : www.oracle.com => products => java=> java download...
   설치 => 윈도우가 자동으로 JDK를 인식할 수 있게 해줘야함
   환경설정 - 고급  - 설치된 자바 경로를 등록 
   path(자바설치경로\bin), JAVA_HOME(자바 설치 경로)

2. IDE(통합개발환경) : www.eclipse.org => download => se버전(자바만 개발)
   압축해제		       org=>무료(나라에서 지원이나 기부)


똑같은 코드를 사용하지 않으려고
JAVA_HOME
C:\Program Files\Java\jdk-20

path
%JAVA_HOME%\bin

실행에 가서(윈도우 + r) => cmd
javac
java
javac -version

TOMCAT_HOME

tomcat.apache.org

서버(호스트) <=> 클라이언트

서버(내가 만든것을 많은 사람이 사용할 수 있게 해주는 것)
웹 서버 : 내가 만든 홈페이지를 많은 사람이 ...
- apache.org : 윈도우, 리눅스, MAC
- IIS : 일반적으로 윈도우에서만 

JSP(스프링)서버 : tomcat.apache.org


게임 서버 : 회사에서 만든 게임을 많은 사람이 ... 

-----------------------------
컴퓨터는 0,1 숫자만

www.naver.com -> dns 서버 -> 223.130.200.107 -> 네이버 전달

ping www.naver.com

---------------------------------------------------
자바, html, css, js 스프링 : 일반

---------------------------------------------------
스택(대부분의 프로그래밍), 힙(객체, 배열, 참조형 타입...)

1. 메모리(RAM) : Random Access Memory(임시 메모리)
   JVM : Java Virtual Machine(자바 가상 머신) - 정교하게 컨트롤x

2. 데이터 크기
    (1) 숫자 : 256 => 128(음수) 0 +127(양수)
    byte(1byte) < char(1byte) < short(2byte) < int(4byte) < long(8byte) < float(4byte) < double(8byte)

    (2) 논리형
    boolean(1byte)

    (3) 문자열 : 글자
     String str = "a";
     String str = new String();

	
 	bit(0,1)
	1 => 0000 0001     

---------------------------------------
프로젝트 생성 후 -> 클래스 파일 -> 파일이름과 클래스이름이 동일해야함
파일이름의 첫글자는 항상 대문자.
자바의 클래스 이름 규칙 중 키워드로 사용하는 이름은 쓰지 않는다.

1. 파일이름은 ByteEx.java
2. 주석
3. main 메소드()
4. 프로그램 작성
5. 출력

	강형타입 : 프로그래밍 할 때 타입을 정확하게 명시
	데이터타입 변수명 = 값;
===============================================
1. 문자(숫자) :  작은 따옴표(싱클 쿼터) - 하나의 글자 <=> 여러 글자(문자열) String 큰 따옴표
=  (1byte = 256) : 키보드에 있는 버튼 - ASCII(아스키코드)
				       한글 UTF-8 자바는 기본적으로 UTF-8 방식을 지원
1. 파일이름 : CharEx.java
2. main() 생성
3. 주석 : 생략
4. 프로그래밍
5. 출력

2. 정수 / 정수 = int
            IntEx.java
	main();


   실수 / 실수 = double



boolean 출력 true, false


BooleanEx.java


DoubleEx.java//






오전 9:03 2023-09-11************************************************************************************

1. 설치 
(1) jdk, eclipse(intelli j)
  - jdk download
  -내 pc => 고급 => 환경설정 => JAVA_HOME (JDK 설치 폴더) - (C:\Program Files\Java\jdk-20)
 			  => path(javac, java 위치해 있는 폴더) (JDK설치폴더\bin)
			       
   www.oracle.com=> products => java=> 스크롤 내려서 밑에 있는 download java => window => x64 MSI installer


 
- eclipse.org download : IDE 통합개발환경


script : 끼워넣어서 사용하는 프로그램
javascript, typescrip, 웹 프로그램 : html 안에 프로그래밍..

middleware

자바	<middleware>	저장(DB)
			mail server
jdk - developer
jre - run




2. 변수와 객체의 차이점
   변수(하나)
   객체(타입이 동일하거나 다른 여러 개의 데이터를 처리)


   변수와 객체의 비슷한 점
   변수든 객체든 선언하고 초기화 작업 필요 

   객체는 선언과 초기화를 처리하는 방법으로 new(생성자) : String str = new String();
   -> 반복문을 함께 사용

* 외우기 ! : 1. num 정수를 선언하고 100이라는 값으로 초기화 하시오.   
   int num; : 선언
   num = 100; : 초기화
   int num = 100; 선언과 초기화를 한번에 한 것*


   String str;	      	
   str = new String();    =>  String str = new String();



---------------------
PrintEx.java
print();
println();
printf();

정수 5와 8의 합을 출력하시오. 


PrintEx2.java

char 
boolean

--------------------------
html
로그인 -> 한 페이지에서만 정보를 유지 할 수 있음. 다른 페이지로 넘어가면 로그인이 끊김
세션(연결), 쿠키 (투표), (아이디 저장 체크) => Ajax
(Session) login



================================
IncDecEx.java

1. operator : 부호
Increment And Decrement Operator
증감 연산자   // 통상 for문에서 주로 쓰임
int a = 1; //+1
int result = a + 1

int result = a++;
int result = ++a;

int result = a--;
int result = --a;

sum = sum +i;

sum += i;

---------------------------------------
산술 연산자
Arithmetric Operator
+-*/%

비교 연산자
>, <, ==, != 결과는 true, false

논리 연산자
&&. ||  


2. 변수의 타입
  (1)기본형(primitive Type)
    int a = 0;
    double b = 0.0;
    boolean c= false;

String str = "";
String 기본형, 참조형
String str = null;

회원가입 : Member.java > model, dto
아이디 : 문자열
비밀번호 : 문자열
이름 : 문자열
나이 : 문자열

이메일주소 : 문자열

for



(2)참조형(Reference Type) : 반복문(for, 향상된for) //*잘모름*  
  - 첫글자가 대문자로 시작...  ex) Interger, Double, Float, Char, Boolean
			     객체
    데이터를 묶음으로 처리하는 것..
  - 배열(고정[], 동적<참조형 또는 객체>) : ArrayList(목록출력), HashMap(JSON)
	       동적<Interger> 동적<Member> 
  -초기화 null


==================================
1. 대입 연산자 Assignment operator
int num = 10;
num = num +2 => num += 2;

AssignEx.java

클래스 변수

객체
=> 변수X(필드, 멤버변수)
=> 생성자(), 생성자(매개변수 = 파라미터 = parameter)
=> getter() - 값을 가져올 때
     setter() - 값을 저장할 때

=> 추가적인 동작이 필요할 때는 메소드








오전 8:54 2023-09-12****************************************************************

1. 실수 : 부동소수점 오차
   (1) float(4byte) : 소수점 7자리 이상

   (2) double(8byte) : 소수점 15자리 이상


FloatDoubleEx.java

2. 타입 캐스팅(형 변환) : 업 캐스팅(자동 : 작은 -> 큰), 다운 캐스팅(강제 : 큰 -> 작은)
		       묵시적 형변환 	       명시적 형변환

CastEx.java


3. 대입연산자(=), 비교연산자(>,< 결과 true, false)
String 기본, 참조

값을 비교할 때(equals), 주소를 비교할 때(==)
String str = "";
String str = null;

String str = new String();

StringEx.java


---------------------

1. 참조형(reference)
(고정)배열[숫자]=> 개수 => length();
(동적)배열<참조> => 개수 => size();

문자열 다루기(일반적으로 index : 0)
이메일 주소 체크 : @
charAt

replaceAll() : 바꾸기

substring : 추출 -> 남자, 여자 구분하는

StringEx2.java

StringEx3.java
변수.toUppercase();
변수.split("문자"); => 배열 => for
printf -> format(형식을 지정해서 출력)


============================================
1. 비교연산자 : 결과 true, false
CompEx.java

2. 논리연산자 : &&(AND), ||(OR) - true, false

1만족하고 3도 만족하면 남자

LogicEx.java


&&(AND연산)
조건 모두 만족하면
:~이면, 이고


||(OR연산) 
조건중에 하나라도 만족하면 
: 또는

====================================
1. 대입연산자 : 약식으로 연산자
AssignEx2.java




2. 삼항연산자(?) : 
ConOpt.java

타입변수 = (조건) ? "참일 때" : "거짓일 때";
	출력


----------------------------------------------------------
Tut01Ex.java






오전 9:02 2023-09-13******************************************************


1. html -> input
   Scanner : 숨겨져 -> import
   입력을 받아서 처리
   System.in
    
   VarEx.java
  
  command = 터미널(서버)

  ScannerEx.java

  ScannerEX2.java
  1. 문자열 -> 숫자로
  2. 숫자 -> 문자열
  3. Scanner -> 형변환

   printf : System.out....


---------------------------------------------------

제어문

ContEx.java

ContEx2.java
논리연산자 + 제어문

&& :
 score >= 91 && score <= 100
||

학점 91 ~ 100 A등급
81 ~ 90 B등급
71 ~ 80 C등급
나머지는 F등급으로 표시하시오

===============================
switch

비교연산자를 사용할 수 없다.
값 : 정수, 문자, 문자열

switch(값) ~ case ~ break ~ default

ContEx3.java

=============================
ContEx4.java













오전 9:10 2023-09-14***************************************************

1. switch ~ case ~ break ~ default

정수를 입력 받아서
3~5 계절은 봄입니다.
6~8 계절은 여름입니다.
9~11 가을입니다
겨울입니다.

ContEx5.java

-------------------------------------------------------
반복문 loop(for)

(고정)배열 : 갯수를 정해 놓고 작업
in[] i = new int[]; ->사용하지 않는 값은 빈값 존재

(가변, 동적) 배열
List<>list = new ArrayList<>(10);
10=> 5 => 공간 조정

LoopEx.java

for
순서 : 초기값 -> 조건 -> 출력코드 -> 증감값

for(int i = 0; i < 조건; ++i) //보통 이렇게 씀

for = 향상 for
for(타입 별명: 배열명){
출력코드
}



while
while(i < 조건) {
출력코드
++i;
}

LoopEx2.java

LoopEx3.java

-----------------------------------------------------

무한루프(웹서비스) : 개발자 또는 시스템 강제로 종료하기 전에는 계속 실행
무한루프 중지 - Ctrl + C(cut)

무한루프 구조
:
  while(true) {
	출력코드	
  }

   for() {;;} {
	출력코드
}

LoopEx4.java


---------------------------------------------
LoopEx5.java


----------------------------
LoopEx6.java
<화면구성>
=================================
스타벅스 커피 자동 판매기
=================================
1. 구매 (P/p) | 2. 잔액 (B/b) | 3. 종료(Q/q)

메뉴선택 >

[조건]
* 최초 잔액은 10000, 커피 한잔 가격은 3000, 커피 재고량은 10
* P/p를 입력하면 구매
  - 구매 시 내가 가진 돈이 커피 한잔 가격보다 적거나
     커피 재고량이 0보다 적으면 "커피를 구매할 수 없습니다"
     출력 후 메뉴 화면을 이동
  - 커피 구매 후 잔액 및 커피 재고량 감산




* B/b를 입력하면 잔액 확인
   - 현재 남은 잔액 출력하기

* 종료를 입력하기 전까지는 무한반복 
  - Q/q를 입력하면 프로그램 종료

* 잘못된 입력 값을 입력하면 종료가 아닌 메뉴 화면으로 이동


==============================================
github.com/zinny24/koreait/tree/main/java2

클래스 또는 메소드
변수는 클래스 바로 밑이나 메소드 바로 밑에 생성
------------------------------------------------------------
git : 프로그램
github : 저장소

   


